package com.lothrazar.colouredstuff.registry;

import com.lothrazar.colouredstuff.ModColourable;
import com.lothrazar.colouredstuff.block.BrickColour;
import com.lothrazar.colouredstuff.block.BrickstoneColour;
import com.lothrazar.colouredstuff.block.ChiseledBrickstoneColour;
import com.lothrazar.colouredstuff.block.ChiseledColor;
import com.lothrazar.colouredstuff.block.CobbleColour;
import com.lothrazar.colouredstuff.block.CraftingColour;
import com.lothrazar.colouredstuff.block.DirtColour;
import com.lothrazar.colouredstuff.block.FarmlandColour;
import com.lothrazar.colouredstuff.block.LeavesColour;
import com.lothrazar.colouredstuff.block.LogColour;
import com.lothrazar.colouredstuff.block.PathColour;
import com.lothrazar.colouredstuff.block.PlanksColour;
import com.lothrazar.colouredstuff.block.SandstoneColour;
import com.lothrazar.colouredstuff.block.SandstoneCutColour;
import com.lothrazar.colouredstuff.block.SaplinColour;
import com.lothrazar.colouredstuff.block.StoneColour;
import com.lothrazar.colouredstuff.block.StrippedLogColour;
import com.lothrazar.colouredstuff.block.fence.PlanksFence;
import com.lothrazar.colouredstuff.block.gate.PlanksGate;
import com.lothrazar.colouredstuff.block.slab.BrickSlab;
import com.lothrazar.colouredstuff.block.slab.CobblestoneSlab;
import com.lothrazar.colouredstuff.block.slab.PlanksSlab;
import com.lothrazar.colouredstuff.block.slab.SandstoneSlab;
import com.lothrazar.colouredstuff.block.slab.StoneSlab;
import com.lothrazar.colouredstuff.block.slab.StonebrickSlab;
import com.lothrazar.colouredstuff.block.stair.BrickStair;
import com.lothrazar.colouredstuff.block.stair.CobblestoneStair;
import com.lothrazar.colouredstuff.block.stair.PlanksStair;
import com.lothrazar.colouredstuff.block.stair.SandstoneStair;
import com.lothrazar.colouredstuff.block.stair.StoneStair;
import com.lothrazar.colouredstuff.block.stair.StonebrickStair;
import com.lothrazar.colouredstuff.block.wall.BrickWall;
import com.lothrazar.colouredstuff.block.wall.CobblestoneWall;
import com.lothrazar.colouredstuff.block.wall.PlanksWall;
import com.lothrazar.colouredstuff.block.wall.SandstoneWall;
import com.lothrazar.colouredstuff.block.wall.StoneWall;
import com.lothrazar.colouredstuff.block.wall.StonebrickWall;
import com.lothrazar.colouredstuff.color.DyeColorless;
import com.lothrazar.colouredstuff.world.RainbowTreeGrower;
import net.minecraft.world.level.block.Block;
import net.minecraft.world.level.block.Blocks;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.RegistryObject;

@Mod.EventBusSubscriber(bus = Mod.EventBusSubscriber.Bus.MOD)
public class ColourableBlockRegistry {

  public static final DeferredRegister<Block> BLOCKS = DeferredRegister.create(ForgeRegistries.BLOCKS, ModColourable.MODID);
  //
  public static final RegistryObject<Block> PLANKS_none = BLOCKS.register("planks_none", () -> new PlanksColour(Block.Properties.copy(Blocks.ACACIA_PLANKS), DyeColorless.NONE));
  public static final RegistryObject<Block> planks_black = BLOCKS.register("planks_black", () -> new PlanksColour(Block.Properties.copy(Blocks.ACACIA_PLANKS), DyeColorless.BLACK));
  public static final RegistryObject<Block> planks_blue = BLOCKS.register("planks_blue", () -> new PlanksColour(Block.Properties.copy(Blocks.ACACIA_PLANKS), DyeColorless.BLUE));
  public static final RegistryObject<Block> PLANKS_brown = BLOCKS.register("planks_brown", () -> new PlanksColour(Block.Properties.copy(Blocks.ACACIA_PLANKS), DyeColorless.BROWN));
  public static final RegistryObject<Block> PLANKS_cyan = BLOCKS.register("planks_cyan", () -> new PlanksColour(Block.Properties.copy(Blocks.ACACIA_PLANKS), DyeColorless.CYAN));
  public static final RegistryObject<Block> PLANKS_gray = BLOCKS.register("planks_gray", () -> new PlanksColour(Block.Properties.copy(Blocks.ACACIA_PLANKS), DyeColorless.GRAY));
  public static final RegistryObject<Block> PLANKS_green = BLOCKS.register("planks_green", () -> new PlanksColour(Block.Properties.copy(Blocks.ACACIA_PLANKS), DyeColorless.GREEN));
  public static final RegistryObject<Block> PLANKS_light_blue = BLOCKS.register("planks_light_blue", () -> new PlanksColour(Block.Properties.copy(Blocks.ACACIA_PLANKS), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<Block> PLANKS_light_gray = BLOCKS.register("planks_light_gray", () -> new PlanksColour(Block.Properties.copy(Blocks.ACACIA_PLANKS), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<Block> PLANKS_lime = BLOCKS.register("planks_lime", () -> new PlanksColour(Block.Properties.copy(Blocks.ACACIA_PLANKS), DyeColorless.LIME));
  public static final RegistryObject<Block> PLANKS_magenta = BLOCKS.register("planks_magenta", () -> new PlanksColour(Block.Properties.copy(Blocks.ACACIA_PLANKS), DyeColorless.MAGENTA));
  public static final RegistryObject<Block> PLANKS_orange = BLOCKS.register("planks_orange", () -> new PlanksColour(Block.Properties.copy(Blocks.ACACIA_PLANKS), DyeColorless.ORANGE));
  public static final RegistryObject<Block> PLANKS_pink = BLOCKS.register("planks_pink", () -> new PlanksColour(Block.Properties.copy(Blocks.ACACIA_PLANKS), DyeColorless.PINK));
  public static final RegistryObject<Block> PLANKS_purple = BLOCKS.register("planks_purple", () -> new PlanksColour(Block.Properties.copy(Blocks.ACACIA_PLANKS), DyeColorless.PURPLE));
  public static final RegistryObject<Block> PLANKS_red = BLOCKS.register("planks_red", () -> new PlanksColour(Block.Properties.copy(Blocks.ACACIA_PLANKS), DyeColorless.RED));
  public static final RegistryObject<Block> PLANKS_white = BLOCKS.register("planks_white", () -> new PlanksColour(Block.Properties.copy(Blocks.ACACIA_PLANKS), DyeColorless.WHITE));
  public static final RegistryObject<Block> PLANKS_yellow = BLOCKS.register("planks_yellow", () -> new PlanksColour(Block.Properties.copy(Blocks.ACACIA_PLANKS), DyeColorless.YELLOW));
  //
  public static final RegistryObject<Block> log_none = BLOCKS.register("log_none", () -> new LogColour(Block.Properties.copy(Blocks.OAK_LOG), DyeColorless.NONE));
  public static final RegistryObject<Block> log_black = BLOCKS.register("log_black", () -> new LogColour(Block.Properties.copy(Blocks.OAK_LOG), DyeColorless.BLACK));
  public static final RegistryObject<Block> log_blue = BLOCKS.register("log_blue", () -> new LogColour(Block.Properties.copy(Blocks.OAK_LOG), DyeColorless.BLUE));
  public static final RegistryObject<Block> log_brown = BLOCKS.register("log_brown", () -> new LogColour(Block.Properties.copy(Blocks.OAK_LOG), DyeColorless.BROWN));
  public static final RegistryObject<Block> log_cyan = BLOCKS.register("log_cyan", () -> new LogColour(Block.Properties.copy(Blocks.OAK_LOG), DyeColorless.CYAN));
  public static final RegistryObject<Block> log_gray = BLOCKS.register("log_gray", () -> new LogColour(Block.Properties.copy(Blocks.OAK_LOG), DyeColorless.GRAY));
  public static final RegistryObject<Block> log_green = BLOCKS.register("log_green", () -> new LogColour(Block.Properties.copy(Blocks.OAK_LOG), DyeColorless.GREEN));
  public static final RegistryObject<Block> log_light_blue = BLOCKS.register("log_light_blue", () -> new LogColour(Block.Properties.copy(Blocks.OAK_LOG), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<Block> log_light_gray = BLOCKS.register("log_light_gray", () -> new LogColour(Block.Properties.copy(Blocks.OAK_LOG), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<Block> log_lime = BLOCKS.register("log_lime", () -> new LogColour(Block.Properties.copy(Blocks.OAK_LOG), DyeColorless.LIME));
  public static final RegistryObject<Block> log_magenta = BLOCKS.register("log_magenta", () -> new LogColour(Block.Properties.copy(Blocks.OAK_LOG), DyeColorless.MAGENTA));
  public static final RegistryObject<Block> log_orange = BLOCKS.register("log_orange", () -> new LogColour(Block.Properties.copy(Blocks.OAK_LOG), DyeColorless.ORANGE));
  public static final RegistryObject<Block> log_pink = BLOCKS.register("log_pink", () -> new LogColour(Block.Properties.copy(Blocks.OAK_LOG), DyeColorless.PINK));
  public static final RegistryObject<Block> log_purple = BLOCKS.register("log_purple", () -> new LogColour(Block.Properties.copy(Blocks.OAK_LOG), DyeColorless.PURPLE));
  public static final RegistryObject<Block> log_red = BLOCKS.register("log_red", () -> new LogColour(Block.Properties.copy(Blocks.OAK_LOG), DyeColorless.RED));
  public static final RegistryObject<Block> log_white = BLOCKS.register("log_white", () -> new LogColour(Block.Properties.copy(Blocks.OAK_LOG), DyeColorless.WHITE));
  public static final RegistryObject<Block> log_yellow = BLOCKS.register("log_yellow", () -> new LogColour(Block.Properties.copy(Blocks.OAK_LOG), DyeColorless.YELLOW));
  //
  public static final RegistryObject<Block> log_stripped_none = BLOCKS.register("log_stripped_none", () -> new StrippedLogColour(Block.Properties.copy(Blocks.OAK_LOG), DyeColorless.NONE));
  public static final RegistryObject<Block> log_stripped_black = BLOCKS.register("log_stripped_black", () -> new StrippedLogColour(Block.Properties.copy(Blocks.OAK_LOG), DyeColorless.BLACK));
  public static final RegistryObject<Block> log_stripped_blue = BLOCKS.register("log_stripped_blue", () -> new StrippedLogColour(Block.Properties.copy(Blocks.OAK_LOG), DyeColorless.BLUE));
  public static final RegistryObject<Block> log_stripped_brown = BLOCKS.register("log_stripped_brown", () -> new StrippedLogColour(Block.Properties.copy(Blocks.OAK_LOG), DyeColorless.BROWN));
  public static final RegistryObject<Block> log_stripped_cyan = BLOCKS.register("log_stripped_cyan", () -> new StrippedLogColour(Block.Properties.copy(Blocks.OAK_LOG), DyeColorless.CYAN));
  public static final RegistryObject<Block> log_stripped_gray = BLOCKS.register("log_stripped_gray", () -> new StrippedLogColour(Block.Properties.copy(Blocks.OAK_LOG), DyeColorless.GRAY));
  public static final RegistryObject<Block> log_stripped_green = BLOCKS.register("log_stripped_green", () -> new StrippedLogColour(Block.Properties.copy(Blocks.OAK_LOG), DyeColorless.GREEN));
  public static final RegistryObject<Block> log_stripped_light_blue = BLOCKS.register("log_stripped_light_blue", () -> new StrippedLogColour(Block.Properties.copy(Blocks.OAK_LOG), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<Block> log_stripped_light_gray = BLOCKS.register("log_stripped_light_gray", () -> new StrippedLogColour(Block.Properties.copy(Blocks.OAK_LOG), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<Block> log_stripped_lime = BLOCKS.register("log_stripped_lime", () -> new StrippedLogColour(Block.Properties.copy(Blocks.OAK_LOG), DyeColorless.LIME));
  public static final RegistryObject<Block> log_stripped_magenta = BLOCKS.register("log_stripped_magenta", () -> new StrippedLogColour(Block.Properties.copy(Blocks.OAK_LOG), DyeColorless.MAGENTA));
  public static final RegistryObject<Block> log_stripped_orange = BLOCKS.register("log_stripped_orange", () -> new StrippedLogColour(Block.Properties.copy(Blocks.OAK_LOG), DyeColorless.ORANGE));
  public static final RegistryObject<Block> log_stripped_pink = BLOCKS.register("log_stripped_pink", () -> new StrippedLogColour(Block.Properties.copy(Blocks.OAK_LOG), DyeColorless.PINK));
  public static final RegistryObject<Block> log_stripped_purple = BLOCKS.register("log_stripped_purple", () -> new StrippedLogColour(Block.Properties.copy(Blocks.OAK_LOG), DyeColorless.PURPLE));
  public static final RegistryObject<Block> log_stripped_red = BLOCKS.register("log_stripped_red", () -> new StrippedLogColour(Block.Properties.copy(Blocks.OAK_LOG), DyeColorless.RED));
  public static final RegistryObject<Block> log_stripped_white = BLOCKS.register("log_stripped_white", () -> new StrippedLogColour(Block.Properties.copy(Blocks.OAK_LOG), DyeColorless.WHITE));
  public static final RegistryObject<Block> log_stripped_yellow = BLOCKS.register("log_stripped_yellow", () -> new StrippedLogColour(Block.Properties.copy(Blocks.OAK_LOG), DyeColorless.YELLOW));

  //
  public static final RegistryObject<CraftingColour> crafting_table_none = BLOCKS.register("crafting_table_none", () -> new CraftingColour(Block.Properties.copy(Blocks.CRAFTING_TABLE), DyeColorless.NONE));
  public static final RegistryObject<CraftingColour> crafting_table_black = BLOCKS.register("crafting_table_black", () -> new CraftingColour(Block.Properties.copy(Blocks.CRAFTING_TABLE), DyeColorless.BLACK));
  public static final RegistryObject<CraftingColour> crafting_table_blue = BLOCKS.register("crafting_table_blue", () -> new CraftingColour(Block.Properties.copy(Blocks.CRAFTING_TABLE), DyeColorless.BLUE));
  public static final RegistryObject<CraftingColour> crafting_table_brown = BLOCKS.register("crafting_table_brown", () -> new CraftingColour(Block.Properties.copy(Blocks.CRAFTING_TABLE), DyeColorless.BROWN));
  public static final RegistryObject<CraftingColour> crafting_table_cyan = BLOCKS.register("crafting_table_cyan", () -> new CraftingColour(Block.Properties.copy(Blocks.CRAFTING_TABLE), DyeColorless.CYAN));
  public static final RegistryObject<CraftingColour> crafting_table_gray = BLOCKS.register("crafting_table_gray", () -> new CraftingColour(Block.Properties.copy(Blocks.CRAFTING_TABLE), DyeColorless.GRAY));
  public static final RegistryObject<CraftingColour> crafting_table_green = BLOCKS.register("crafting_table_green", () -> new CraftingColour(Block.Properties.copy(Blocks.CRAFTING_TABLE), DyeColorless.GREEN));
  public static final RegistryObject<CraftingColour> crafting_table_light_blue = BLOCKS.register("crafting_table_light_blue", () -> new CraftingColour(Block.Properties.copy(Blocks.CRAFTING_TABLE), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<CraftingColour> crafting_table_light_gray = BLOCKS.register("crafting_table_light_gray", () -> new CraftingColour(Block.Properties.copy(Blocks.CRAFTING_TABLE), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<CraftingColour> crafting_table_lime = BLOCKS.register("crafting_table_lime", () -> new CraftingColour(Block.Properties.copy(Blocks.CRAFTING_TABLE), DyeColorless.LIME));
  public static final RegistryObject<CraftingColour> crafting_table_magenta = BLOCKS.register("crafting_table_magenta", () -> new CraftingColour(Block.Properties.copy(Blocks.CRAFTING_TABLE), DyeColorless.MAGENTA));
  public static final RegistryObject<CraftingColour> crafting_table_orange = BLOCKS.register("crafting_table_orange", () -> new CraftingColour(Block.Properties.copy(Blocks.CRAFTING_TABLE), DyeColorless.ORANGE));
  public static final RegistryObject<CraftingColour> crafting_table_pink = BLOCKS.register("crafting_table_pink", () -> new CraftingColour(Block.Properties.copy(Blocks.CRAFTING_TABLE), DyeColorless.PINK));
  public static final RegistryObject<CraftingColour> crafting_table_purple = BLOCKS.register("crafting_table_purple", () -> new CraftingColour(Block.Properties.copy(Blocks.CRAFTING_TABLE), DyeColorless.PURPLE));
  public static final RegistryObject<CraftingColour> crafting_table_red = BLOCKS.register("crafting_table_red", () -> new CraftingColour(Block.Properties.copy(Blocks.CRAFTING_TABLE), DyeColorless.RED));
  public static final RegistryObject<CraftingColour> crafting_table_white = BLOCKS.register("crafting_table_white", () -> new CraftingColour(Block.Properties.copy(Blocks.CRAFTING_TABLE), DyeColorless.WHITE));
  public static final RegistryObject<CraftingColour> crafting_table_yellow = BLOCKS.register("crafting_table_yellow", () -> new CraftingColour(Block.Properties.copy(Blocks.CRAFTING_TABLE), DyeColorless.YELLOW));
  //
  public static final RegistryObject<Block> leaves_none = BLOCKS.register("leaves_none", () -> new LeavesColour(Block.Properties.copy(Blocks.OAK_LEAVES), DyeColorless.NONE));
  public static final RegistryObject<Block> leaves_black = BLOCKS.register("leaves_black", () -> new LeavesColour(Block.Properties.copy(Blocks.OAK_LEAVES), DyeColorless.BLACK));
  public static final RegistryObject<Block> leaves_blue = BLOCKS.register("leaves_blue", () -> new LeavesColour(Block.Properties.copy(Blocks.OAK_LEAVES), DyeColorless.BLUE));
  public static final RegistryObject<Block> leaves_brown = BLOCKS.register("leaves_brown", () -> new LeavesColour(Block.Properties.copy(Blocks.OAK_LEAVES), DyeColorless.BROWN));
  public static final RegistryObject<Block> leaves_cyan = BLOCKS.register("leaves_cyan", () -> new LeavesColour(Block.Properties.copy(Blocks.OAK_LEAVES), DyeColorless.CYAN));
  public static final RegistryObject<Block> leaves_gray = BLOCKS.register("leaves_gray", () -> new LeavesColour(Block.Properties.copy(Blocks.OAK_LEAVES), DyeColorless.GRAY));
  public static final RegistryObject<Block> leaves_green = BLOCKS.register("leaves_green", () -> new LeavesColour(Block.Properties.copy(Blocks.OAK_LEAVES), DyeColorless.GREEN));
  public static final RegistryObject<Block> leaves_light_blue = BLOCKS.register("leaves_light_blue", () -> new LeavesColour(Block.Properties.copy(Blocks.OAK_LEAVES), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<Block> leaves_light_gray = BLOCKS.register("leaves_light_gray", () -> new LeavesColour(Block.Properties.copy(Blocks.OAK_LEAVES), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<Block> leaves_lime = BLOCKS.register("leaves_lime", () -> new LeavesColour(Block.Properties.copy(Blocks.OAK_LEAVES), DyeColorless.LIME));
  public static final RegistryObject<Block> leaves_magenta = BLOCKS.register("leaves_magenta", () -> new LeavesColour(Block.Properties.copy(Blocks.OAK_LEAVES), DyeColorless.MAGENTA));
  public static final RegistryObject<Block> leaves_orange = BLOCKS.register("leaves_orange", () -> new LeavesColour(Block.Properties.copy(Blocks.OAK_LEAVES), DyeColorless.ORANGE));
  public static final RegistryObject<Block> leaves_pink = BLOCKS.register("leaves_pink", () -> new LeavesColour(Block.Properties.copy(Blocks.OAK_LEAVES), DyeColorless.PINK));
  public static final RegistryObject<Block> leaves_purple = BLOCKS.register("leaves_purple", () -> new LeavesColour(Block.Properties.copy(Blocks.OAK_LEAVES), DyeColorless.PURPLE));
  public static final RegistryObject<Block> leaves_red = BLOCKS.register("leaves_red", () -> new LeavesColour(Block.Properties.copy(Blocks.OAK_LEAVES), DyeColorless.RED));
  public static final RegistryObject<Block> leaves_white = BLOCKS.register("leaves_white", () -> new LeavesColour(Block.Properties.copy(Blocks.OAK_LEAVES), DyeColorless.WHITE));
  public static final RegistryObject<Block> leaves_yellow = BLOCKS.register("leaves_yellow", () -> new LeavesColour(Block.Properties.copy(Blocks.OAK_LEAVES), DyeColorless.YELLOW));
  //
  public static final RegistryObject<SaplinColour> sapling_none = BLOCKS.register("sapling_none", () -> new SaplinColour(new RainbowTreeGrower(), Block.Properties.copy(Blocks.OAK_SAPLING), DyeColorless.NONE));
  public static final RegistryObject<SaplinColour> sapling_black = BLOCKS.register("sapling_black", () -> new SaplinColour(new RainbowTreeGrower(), Block.Properties.copy(Blocks.OAK_SAPLING), DyeColorless.BLACK));
  public static final RegistryObject<SaplinColour> sapling_blue = BLOCKS.register("sapling_blue", () -> new SaplinColour(new RainbowTreeGrower(), Block.Properties.copy(Blocks.OAK_SAPLING), DyeColorless.BLUE));
  public static final RegistryObject<SaplinColour> sapling_brown = BLOCKS.register("sapling_brown", () -> new SaplinColour(new RainbowTreeGrower(), Block.Properties.copy(Blocks.OAK_SAPLING), DyeColorless.BROWN));
  public static final RegistryObject<SaplinColour> sapling_cyan = BLOCKS.register("sapling_cyan", () -> new SaplinColour(new RainbowTreeGrower(), Block.Properties.copy(Blocks.OAK_SAPLING), DyeColorless.CYAN));
  public static final RegistryObject<SaplinColour> sapling_gray = BLOCKS.register("sapling_gray", () -> new SaplinColour(new RainbowTreeGrower(), Block.Properties.copy(Blocks.OAK_SAPLING), DyeColorless.GRAY));
  public static final RegistryObject<SaplinColour> sapling_green = BLOCKS.register("sapling_green", () -> new SaplinColour(new RainbowTreeGrower(), Block.Properties.copy(Blocks.OAK_SAPLING), DyeColorless.GREEN));
  public static final RegistryObject<SaplinColour> sapling_light_blue = BLOCKS.register("sapling_light_blue", () -> new SaplinColour(new RainbowTreeGrower(), Block.Properties.copy(Blocks.OAK_SAPLING), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<SaplinColour> sapling_light_gray = BLOCKS.register("sapling_light_gray", () -> new SaplinColour(new RainbowTreeGrower(), Block.Properties.copy(Blocks.OAK_SAPLING), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<SaplinColour> sapling_lime = BLOCKS.register("sapling_lime", () -> new SaplinColour(new RainbowTreeGrower(), Block.Properties.copy(Blocks.OAK_SAPLING), DyeColorless.LIME));
  public static final RegistryObject<SaplinColour> sapling_magenta = BLOCKS.register("sapling_magenta", () -> new SaplinColour(new RainbowTreeGrower(), Block.Properties.copy(Blocks.OAK_SAPLING), DyeColorless.MAGENTA));
  public static final RegistryObject<SaplinColour> sapling_orange = BLOCKS.register("sapling_orange", () -> new SaplinColour(new RainbowTreeGrower(), Block.Properties.copy(Blocks.OAK_SAPLING), DyeColorless.ORANGE));
  public static final RegistryObject<SaplinColour> sapling_pink = BLOCKS.register("sapling_pink", () -> new SaplinColour(new RainbowTreeGrower(), Block.Properties.copy(Blocks.OAK_SAPLING), DyeColorless.PINK));
  public static final RegistryObject<SaplinColour> sapling_purple = BLOCKS.register("sapling_purple", () -> new SaplinColour(new RainbowTreeGrower(), Block.Properties.copy(Blocks.OAK_SAPLING), DyeColorless.PURPLE));
  public static final RegistryObject<SaplinColour> sapling_red = BLOCKS.register("sapling_red", () -> new SaplinColour(new RainbowTreeGrower(), Block.Properties.copy(Blocks.OAK_SAPLING), DyeColorless.RED));
  public static final RegistryObject<SaplinColour> sapling_white = BLOCKS.register("sapling_white", () -> new SaplinColour(new RainbowTreeGrower(), Block.Properties.copy(Blocks.OAK_SAPLING), DyeColorless.WHITE));
  public static final RegistryObject<SaplinColour> sapling_yellow = BLOCKS.register("sapling_yellow", () -> new SaplinColour(new RainbowTreeGrower(), Block.Properties.copy(Blocks.OAK_SAPLING), DyeColorless.YELLOW));
  //
  public static final RegistryObject<Block> cobblestone_none = BLOCKS.register("cobblestone_none", () -> new CobbleColour(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.NONE));
  public static final RegistryObject<Block> cobblestone_black = BLOCKS.register("cobblestone_black", () -> new CobbleColour(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.BLACK));
  public static final RegistryObject<Block> cobblestone_blue = BLOCKS.register("cobblestone_blue", () -> new CobbleColour(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.BLUE));
  public static final RegistryObject<Block> cobblestone_brown = BLOCKS.register("cobblestone_brown", () -> new CobbleColour(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.BROWN));
  public static final RegistryObject<Block> cobblestone_cyan = BLOCKS.register("cobblestone_cyan", () -> new CobbleColour(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.CYAN));
  public static final RegistryObject<Block> cobblestone_gray = BLOCKS.register("cobblestone_gray", () -> new CobbleColour(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.GRAY));
  public static final RegistryObject<Block> cobblestone_green = BLOCKS.register("cobblestone_green", () -> new CobbleColour(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.GREEN));
  public static final RegistryObject<Block> cobblestone_light_blue = BLOCKS.register("cobblestone_light_blue", () -> new CobbleColour(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<Block> cobblestone_light_gray = BLOCKS.register("cobblestone_light_gray", () -> new CobbleColour(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<Block> cobblestone_lime = BLOCKS.register("cobblestone_lime", () -> new CobbleColour(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.LIME));
  public static final RegistryObject<Block> cobblestone_magenta = BLOCKS.register("cobblestone_magenta", () -> new CobbleColour(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.MAGENTA));
  public static final RegistryObject<Block> cobblestone_orange = BLOCKS.register("cobblestone_orange", () -> new CobbleColour(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.ORANGE));
  public static final RegistryObject<Block> cobblestone_pink = BLOCKS.register("cobblestone_pink", () -> new CobbleColour(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.PINK));
  public static final RegistryObject<Block> cobblestone_purple = BLOCKS.register("cobblestone_purple", () -> new CobbleColour(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.PURPLE));
  public static final RegistryObject<Block> cobblestone_red = BLOCKS.register("cobblestone_red", () -> new CobbleColour(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.RED));
  public static final RegistryObject<Block> cobblestone_white = BLOCKS.register("cobblestone_white", () -> new CobbleColour(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.WHITE));
  public static final RegistryObject<Block> cobblestone_yellow = BLOCKS.register("cobblestone_yellow", () -> new CobbleColour(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.YELLOW));
  //
  public static final RegistryObject<Block> stone_none = BLOCKS.register("stone_none", () -> new StoneColour(Block.Properties.copy(Blocks.STONE), DyeColorless.NONE));
  public static final RegistryObject<Block> stone_black = BLOCKS.register("stone_black", () -> new StoneColour(Block.Properties.copy(Blocks.STONE), DyeColorless.BLACK));
  public static final RegistryObject<Block> stone_blue = BLOCKS.register("stone_blue", () -> new StoneColour(Block.Properties.copy(Blocks.STONE), DyeColorless.BLUE));
  public static final RegistryObject<Block> stone_brown = BLOCKS.register("stone_brown", () -> new StoneColour(Block.Properties.copy(Blocks.STONE), DyeColorless.BROWN));
  public static final RegistryObject<Block> stone_cyan = BLOCKS.register("stone_cyan", () -> new StoneColour(Block.Properties.copy(Blocks.STONE), DyeColorless.CYAN));
  public static final RegistryObject<Block> stone_gray = BLOCKS.register("stone_gray", () -> new StoneColour(Block.Properties.copy(Blocks.STONE), DyeColorless.GRAY));
  public static final RegistryObject<Block> stone_green = BLOCKS.register("stone_green", () -> new StoneColour(Block.Properties.copy(Blocks.STONE), DyeColorless.GREEN));
  public static final RegistryObject<Block> stone_light_blue = BLOCKS.register("stone_light_blue", () -> new StoneColour(Block.Properties.copy(Blocks.STONE), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<Block> stone_light_gray = BLOCKS.register("stone_light_gray", () -> new StoneColour(Block.Properties.copy(Blocks.STONE), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<Block> stone_lime = BLOCKS.register("stone_lime", () -> new StoneColour(Block.Properties.copy(Blocks.STONE), DyeColorless.LIME));
  public static final RegistryObject<Block> stone_magenta = BLOCKS.register("stone_magenta", () -> new StoneColour(Block.Properties.copy(Blocks.STONE), DyeColorless.MAGENTA));
  public static final RegistryObject<Block> stone_orange = BLOCKS.register("stone_orange", () -> new StoneColour(Block.Properties.copy(Blocks.STONE), DyeColorless.ORANGE));
  public static final RegistryObject<Block> stone_pink = BLOCKS.register("stone_pink", () -> new StoneColour(Block.Properties.copy(Blocks.STONE), DyeColorless.PINK));
  public static final RegistryObject<Block> stone_purple = BLOCKS.register("stone_purple", () -> new StoneColour(Block.Properties.copy(Blocks.STONE), DyeColorless.PURPLE));
  public static final RegistryObject<Block> stone_red = BLOCKS.register("stone_red", () -> new StoneColour(Block.Properties.copy(Blocks.STONE), DyeColorless.RED));
  public static final RegistryObject<Block> stone_white = BLOCKS.register("stone_white", () -> new StoneColour(Block.Properties.copy(Blocks.STONE), DyeColorless.WHITE));
  public static final RegistryObject<Block> stone_yellow = BLOCKS.register("stone_yellow", () -> new StoneColour(Block.Properties.copy(Blocks.STONE), DyeColorless.YELLOW));
  // 
  public static final RegistryObject<BrickstoneColour> stone_bricks_none = BLOCKS.register("stone_bricks_none", () -> new BrickstoneColour(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.NONE));
  public static final RegistryObject<BrickstoneColour> stone_bricks_black = BLOCKS.register("stone_bricks_black", () -> new BrickstoneColour(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.BLACK));
  public static final RegistryObject<BrickstoneColour> stone_bricks_blue = BLOCKS.register("stone_bricks_blue", () -> new BrickstoneColour(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.BLUE));
  public static final RegistryObject<BrickstoneColour> stone_bricks_brown = BLOCKS.register("stone_bricks_brown", () -> new BrickstoneColour(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.BROWN));
  public static final RegistryObject<BrickstoneColour> stone_bricks_cyan = BLOCKS.register("stone_bricks_cyan", () -> new BrickstoneColour(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.CYAN));
  public static final RegistryObject<BrickstoneColour> stone_bricks_gray = BLOCKS.register("stone_bricks_gray", () -> new BrickstoneColour(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.GRAY));
  public static final RegistryObject<BrickstoneColour> stone_bricks_green = BLOCKS.register("stone_bricks_green", () -> new BrickstoneColour(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.GREEN));
  public static final RegistryObject<BrickstoneColour> stone_bricks_light_blue = BLOCKS.register("stone_bricks_light_blue", () -> new BrickstoneColour(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<BrickstoneColour> stone_bricks_light_gray = BLOCKS.register("stone_bricks_light_gray", () -> new BrickstoneColour(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<BrickstoneColour> stone_bricks_lime = BLOCKS.register("stone_bricks_lime", () -> new BrickstoneColour(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.LIME));
  public static final RegistryObject<BrickstoneColour> stone_bricks_magenta = BLOCKS.register("stone_bricks_magenta", () -> new BrickstoneColour(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.MAGENTA));
  public static final RegistryObject<BrickstoneColour> stone_bricks_orange = BLOCKS.register("stone_bricks_orange", () -> new BrickstoneColour(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.ORANGE));
  public static final RegistryObject<BrickstoneColour> stone_bricks_pink = BLOCKS.register("stone_bricks_pink", () -> new BrickstoneColour(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.PINK));
  public static final RegistryObject<BrickstoneColour> stone_bricks_purple = BLOCKS.register("stone_bricks_purple", () -> new BrickstoneColour(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.PURPLE));
  public static final RegistryObject<BrickstoneColour> stone_bricks_red = BLOCKS.register("stone_bricks_red", () -> new BrickstoneColour(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.RED));
  public static final RegistryObject<BrickstoneColour> stone_bricks_white = BLOCKS.register("stone_bricks_white", () -> new BrickstoneColour(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.WHITE));
  public static final RegistryObject<BrickstoneColour> stone_bricks_yellow = BLOCKS.register("stone_bricks_yellow", () -> new BrickstoneColour(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.YELLOW));
  //
  public static final RegistryObject<Block> chiseled_stone_bricks_none = BLOCKS.register("chiseled_stone_bricks_none", () -> new ChiseledBrickstoneColour(Block.Properties.copy(Blocks.CHISELED_STONE_BRICKS), DyeColorless.NONE));
  public static final RegistryObject<Block> chiseled_stone_bricks_black = BLOCKS.register("chiseled_stone_bricks_black", () -> new ChiseledBrickstoneColour(Block.Properties.copy(Blocks.CHISELED_STONE_BRICKS), DyeColorless.BLACK));
  public static final RegistryObject<Block> chiseled_stone_bricks_blue = BLOCKS.register("chiseled_stone_bricks_blue", () -> new ChiseledBrickstoneColour(Block.Properties.copy(Blocks.CHISELED_STONE_BRICKS), DyeColorless.BLUE));
  public static final RegistryObject<Block> chiseled_stone_bricks_brown = BLOCKS.register("chiseled_stone_bricks_brown", () -> new ChiseledBrickstoneColour(Block.Properties.copy(Blocks.CHISELED_STONE_BRICKS), DyeColorless.BROWN));
  public static final RegistryObject<Block> chiseled_stone_bricks_cyan = BLOCKS.register("chiseled_stone_bricks_cyan", () -> new ChiseledBrickstoneColour(Block.Properties.copy(Blocks.CHISELED_STONE_BRICKS), DyeColorless.CYAN));
  public static final RegistryObject<Block> chiseled_stone_bricks_gray = BLOCKS.register("chiseled_stone_bricks_gray", () -> new ChiseledBrickstoneColour(Block.Properties.copy(Blocks.CHISELED_STONE_BRICKS), DyeColorless.GRAY));
  public static final RegistryObject<Block> chiseled_stone_bricks_green = BLOCKS.register("chiseled_stone_bricks_green", () -> new ChiseledBrickstoneColour(Block.Properties.copy(Blocks.CHISELED_STONE_BRICKS), DyeColorless.GREEN));
  public static final RegistryObject<Block> chiseled_stone_bricks_light_blue = BLOCKS.register("chiseled_stone_bricks_light_blue", () -> new ChiseledBrickstoneColour(Block.Properties.copy(Blocks.CHISELED_STONE_BRICKS), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<Block> chiseled_stone_bricks_light_gray = BLOCKS.register("chiseled_stone_bricks_light_gray", () -> new ChiseledBrickstoneColour(Block.Properties.copy(Blocks.CHISELED_STONE_BRICKS), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<Block> chiseled_stone_bricks_lime = BLOCKS.register("chiseled_stone_bricks_lime", () -> new ChiseledBrickstoneColour(Block.Properties.copy(Blocks.CHISELED_STONE_BRICKS), DyeColorless.LIME));
  public static final RegistryObject<Block> chiseled_stone_bricks_magenta = BLOCKS.register("chiseled_stone_bricks_magenta", () -> new ChiseledBrickstoneColour(Block.Properties.copy(Blocks.CHISELED_STONE_BRICKS), DyeColorless.MAGENTA));
  public static final RegistryObject<Block> chiseled_stone_bricks_orange = BLOCKS.register("chiseled_stone_bricks_orange", () -> new ChiseledBrickstoneColour(Block.Properties.copy(Blocks.CHISELED_STONE_BRICKS), DyeColorless.ORANGE));
  public static final RegistryObject<Block> chiseled_stone_bricks_pink = BLOCKS.register("chiseled_stone_bricks_pink", () -> new ChiseledBrickstoneColour(Block.Properties.copy(Blocks.CHISELED_STONE_BRICKS), DyeColorless.PINK));
  public static final RegistryObject<Block> chiseled_stone_bricks_purple = BLOCKS.register("chiseled_stone_bricks_purple", () -> new ChiseledBrickstoneColour(Block.Properties.copy(Blocks.CHISELED_STONE_BRICKS), DyeColorless.PURPLE));
  public static final RegistryObject<Block> chiseled_stone_bricks_red = BLOCKS.register("chiseled_stone_bricks_red", () -> new ChiseledBrickstoneColour(Block.Properties.copy(Blocks.CHISELED_STONE_BRICKS), DyeColorless.RED));
  public static final RegistryObject<Block> chiseled_stone_bricks_white = BLOCKS.register("chiseled_stone_bricks_white", () -> new ChiseledBrickstoneColour(Block.Properties.copy(Blocks.CHISELED_STONE_BRICKS), DyeColorless.WHITE));
  public static final RegistryObject<Block> chiseled_stone_bricks_yellow = BLOCKS.register("chiseled_stone_bricks_yellow", () -> new ChiseledBrickstoneColour(Block.Properties.copy(Blocks.CHISELED_STONE_BRICKS), DyeColorless.YELLOW));
  //
  public static final RegistryObject<Block> dirt_none = BLOCKS.register("dirt_none", () -> new DirtColour(Block.Properties.copy(Blocks.DIRT), DyeColorless.NONE));
  public static final RegistryObject<Block> dirt_black = BLOCKS.register("dirt_black", () -> new DirtColour(Block.Properties.copy(Blocks.DIRT), DyeColorless.BLACK));
  public static final RegistryObject<Block> dirt_blue = BLOCKS.register("dirt_blue", () -> new DirtColour(Block.Properties.copy(Blocks.DIRT), DyeColorless.BLUE));
  public static final RegistryObject<Block> dirt_brown = BLOCKS.register("dirt_brown", () -> new DirtColour(Block.Properties.copy(Blocks.DIRT), DyeColorless.BROWN));
  public static final RegistryObject<Block> dirt_cyan = BLOCKS.register("dirt_cyan", () -> new DirtColour(Block.Properties.copy(Blocks.DIRT), DyeColorless.CYAN));
  public static final RegistryObject<Block> dirt_gray = BLOCKS.register("dirt_gray", () -> new DirtColour(Block.Properties.copy(Blocks.DIRT), DyeColorless.GRAY));
  public static final RegistryObject<Block> dirt_green = BLOCKS.register("dirt_green", () -> new DirtColour(Block.Properties.copy(Blocks.DIRT), DyeColorless.GREEN));
  public static final RegistryObject<Block> dirt_light_blue = BLOCKS.register("dirt_light_blue", () -> new DirtColour(Block.Properties.copy(Blocks.DIRT), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<Block> dirt_light_gray = BLOCKS.register("dirt_light_gray", () -> new DirtColour(Block.Properties.copy(Blocks.DIRT), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<Block> dirt_lime = BLOCKS.register("dirt_lime", () -> new DirtColour(Block.Properties.copy(Blocks.DIRT), DyeColorless.LIME));
  public static final RegistryObject<Block> dirt_magenta = BLOCKS.register("dirt_magenta", () -> new DirtColour(Block.Properties.copy(Blocks.DIRT), DyeColorless.MAGENTA));
  public static final RegistryObject<Block> dirt_orange = BLOCKS.register("dirt_orange", () -> new DirtColour(Block.Properties.copy(Blocks.DIRT), DyeColorless.ORANGE));
  public static final RegistryObject<Block> dirt_pink = BLOCKS.register("dirt_pink", () -> new DirtColour(Block.Properties.copy(Blocks.DIRT), DyeColorless.PINK));
  public static final RegistryObject<Block> dirt_purple = BLOCKS.register("dirt_purple", () -> new DirtColour(Block.Properties.copy(Blocks.DIRT), DyeColorless.PURPLE));
  public static final RegistryObject<Block> dirt_red = BLOCKS.register("dirt_red", () -> new DirtColour(Block.Properties.copy(Blocks.DIRT), DyeColorless.RED));
  public static final RegistryObject<Block> dirt_white = BLOCKS.register("dirt_white", () -> new DirtColour(Block.Properties.copy(Blocks.DIRT), DyeColorless.WHITE));
  public static final RegistryObject<Block> dirt_yellow = BLOCKS.register("dirt_yellow", () -> new DirtColour(Block.Properties.copy(Blocks.DIRT), DyeColorless.YELLOW));
  //
  public static final RegistryObject<Block> path_none = BLOCKS.register("path_none", () -> new PathColour(Block.Properties.copy(Blocks.DIRT_PATH), DyeColorless.NONE));
  public static final RegistryObject<Block> path_black = BLOCKS.register("path_black", () -> new PathColour(Block.Properties.copy(Blocks.DIRT_PATH), DyeColorless.BLACK));
  public static final RegistryObject<Block> path_blue = BLOCKS.register("path_blue", () -> new PathColour(Block.Properties.copy(Blocks.DIRT_PATH), DyeColorless.BLUE));
  public static final RegistryObject<Block> path_brown = BLOCKS.register("path_brown", () -> new PathColour(Block.Properties.copy(Blocks.DIRT_PATH), DyeColorless.BROWN));
  public static final RegistryObject<Block> path_cyan = BLOCKS.register("path_cyan", () -> new PathColour(Block.Properties.copy(Blocks.DIRT_PATH), DyeColorless.CYAN));
  public static final RegistryObject<Block> path_gray = BLOCKS.register("path_gray", () -> new PathColour(Block.Properties.copy(Blocks.DIRT_PATH), DyeColorless.GRAY));
  public static final RegistryObject<Block> path_green = BLOCKS.register("path_green", () -> new PathColour(Block.Properties.copy(Blocks.DIRT_PATH), DyeColorless.GREEN));
  public static final RegistryObject<Block> path_light_blue = BLOCKS.register("path_light_blue", () -> new PathColour(Block.Properties.copy(Blocks.DIRT_PATH), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<Block> path_light_gray = BLOCKS.register("path_light_gray", () -> new PathColour(Block.Properties.copy(Blocks.DIRT_PATH), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<Block> path_lime = BLOCKS.register("path_lime", () -> new PathColour(Block.Properties.copy(Blocks.DIRT_PATH), DyeColorless.LIME));
  public static final RegistryObject<Block> path_magenta = BLOCKS.register("path_magenta", () -> new PathColour(Block.Properties.copy(Blocks.DIRT_PATH), DyeColorless.MAGENTA));
  public static final RegistryObject<Block> path_orange = BLOCKS.register("path_orange", () -> new PathColour(Block.Properties.copy(Blocks.DIRT_PATH), DyeColorless.ORANGE));
  public static final RegistryObject<Block> path_pink = BLOCKS.register("path_pink", () -> new PathColour(Block.Properties.copy(Blocks.DIRT_PATH), DyeColorless.PINK));
  public static final RegistryObject<Block> path_purple = BLOCKS.register("path_purple", () -> new PathColour(Block.Properties.copy(Blocks.DIRT_PATH), DyeColorless.PURPLE));
  public static final RegistryObject<Block> path_red = BLOCKS.register("path_red", () -> new PathColour(Block.Properties.copy(Blocks.DIRT_PATH), DyeColorless.RED));
  public static final RegistryObject<Block> path_white = BLOCKS.register("path_white", () -> new PathColour(Block.Properties.copy(Blocks.DIRT_PATH), DyeColorless.WHITE));
  public static final RegistryObject<Block> path_yellow = BLOCKS.register("path_yellow", () -> new PathColour(Block.Properties.copy(Blocks.DIRT_PATH), DyeColorless.YELLOW));
  //
  public static final RegistryObject<Block> farmland_none = BLOCKS.register("farmland_none", () -> new FarmlandColour(Block.Properties.copy(Blocks.FARMLAND), DyeColorless.NONE));
  public static final RegistryObject<Block> farmland_black = BLOCKS.register("farmland_black", () -> new FarmlandColour(Block.Properties.copy(Blocks.FARMLAND), DyeColorless.BLACK));
  public static final RegistryObject<Block> farmland_blue = BLOCKS.register("farmland_blue", () -> new FarmlandColour(Block.Properties.copy(Blocks.FARMLAND), DyeColorless.BLUE));
  public static final RegistryObject<Block> farmland_brown = BLOCKS.register("farmland_brown", () -> new FarmlandColour(Block.Properties.copy(Blocks.FARMLAND), DyeColorless.BROWN));
  public static final RegistryObject<Block> farmland_cyan = BLOCKS.register("farmland_cyan", () -> new FarmlandColour(Block.Properties.copy(Blocks.FARMLAND), DyeColorless.CYAN));
  public static final RegistryObject<Block> farmland_gray = BLOCKS.register("farmland_gray", () -> new FarmlandColour(Block.Properties.copy(Blocks.FARMLAND), DyeColorless.GRAY));
  public static final RegistryObject<Block> farmland_green = BLOCKS.register("farmland_green", () -> new FarmlandColour(Block.Properties.copy(Blocks.FARMLAND), DyeColorless.GREEN));
  public static final RegistryObject<Block> farmland_light_blue = BLOCKS.register("farmland_light_blue", () -> new FarmlandColour(Block.Properties.copy(Blocks.FARMLAND), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<Block> farmland_light_gray = BLOCKS.register("farmland_light_gray", () -> new FarmlandColour(Block.Properties.copy(Blocks.FARMLAND), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<Block> farmland_lime = BLOCKS.register("farmland_lime", () -> new FarmlandColour(Block.Properties.copy(Blocks.FARMLAND), DyeColorless.LIME));
  public static final RegistryObject<Block> farmland_magenta = BLOCKS.register("farmland_magenta", () -> new FarmlandColour(Block.Properties.copy(Blocks.FARMLAND), DyeColorless.MAGENTA));
  public static final RegistryObject<Block> farmland_orange = BLOCKS.register("farmland_orange", () -> new FarmlandColour(Block.Properties.copy(Blocks.FARMLAND), DyeColorless.ORANGE));
  public static final RegistryObject<Block> farmland_pink = BLOCKS.register("farmland_pink", () -> new FarmlandColour(Block.Properties.copy(Blocks.FARMLAND), DyeColorless.PINK));
  public static final RegistryObject<Block> farmland_purple = BLOCKS.register("farmland_purple", () -> new FarmlandColour(Block.Properties.copy(Blocks.FARMLAND), DyeColorless.PURPLE));
  public static final RegistryObject<Block> farmland_red = BLOCKS.register("farmland_red", () -> new FarmlandColour(Block.Properties.copy(Blocks.FARMLAND), DyeColorless.RED));
  public static final RegistryObject<Block> farmland_white = BLOCKS.register("farmland_white", () -> new FarmlandColour(Block.Properties.copy(Blocks.FARMLAND), DyeColorless.WHITE));
  public static final RegistryObject<Block> farmland_yellow = BLOCKS.register("farmland_yellow", () -> new FarmlandColour(Block.Properties.copy(Blocks.FARMLAND), DyeColorless.YELLOW));
  //
  public static final RegistryObject<Block> sandstone_none = BLOCKS.register("sandstone_none", () -> new SandstoneColour(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.NONE));
  public static final RegistryObject<Block> sandstone_black = BLOCKS.register("sandstone_black", () -> new SandstoneColour(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.BLACK));
  public static final RegistryObject<Block> sandstone_blue = BLOCKS.register("sandstone_blue", () -> new SandstoneColour(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.BLUE));
  public static final RegistryObject<Block> sandstone_brown = BLOCKS.register("sandstone_brown", () -> new SandstoneColour(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.BROWN));
  public static final RegistryObject<Block> sandstone_cyan = BLOCKS.register("sandstone_cyan", () -> new SandstoneColour(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.CYAN));
  public static final RegistryObject<Block> sandstone_gray = BLOCKS.register("sandstone_gray", () -> new SandstoneColour(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.GRAY));
  public static final RegistryObject<Block> sandstone_green = BLOCKS.register("sandstone_green", () -> new SandstoneColour(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.GREEN));
  public static final RegistryObject<Block> sandstone_light_blue = BLOCKS.register("sandstone_light_blue", () -> new SandstoneColour(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<Block> sandstone_light_gray = BLOCKS.register("sandstone_light_gray", () -> new SandstoneColour(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<Block> sandstone_lime = BLOCKS.register("sandstone_lime", () -> new SandstoneColour(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.LIME));
  public static final RegistryObject<Block> sandstone_magenta = BLOCKS.register("sandstone_magenta", () -> new SandstoneColour(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.MAGENTA));
  public static final RegistryObject<Block> sandstone_orange = BLOCKS.register("sandstone_orange", () -> new SandstoneColour(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.ORANGE));
  public static final RegistryObject<Block> sandstone_pink = BLOCKS.register("sandstone_pink", () -> new SandstoneColour(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.PINK));
  public static final RegistryObject<Block> sandstone_purple = BLOCKS.register("sandstone_purple", () -> new SandstoneColour(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.PURPLE));
  public static final RegistryObject<Block> sandstone_red = BLOCKS.register("sandstone_red", () -> new SandstoneColour(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.RED));
  public static final RegistryObject<Block> sandstone_white = BLOCKS.register("sandstone_white", () -> new SandstoneColour(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.WHITE));
  public static final RegistryObject<Block> sandstone_yellow = BLOCKS.register("sandstone_yellow", () -> new SandstoneColour(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.YELLOW));
  //
  public static final RegistryObject<ChiseledColor> chiseled_sandstone_none = BLOCKS.register("chiseled_sandstone_none", () -> new ChiseledColor(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.NONE));
  public static final RegistryObject<ChiseledColor> chiseled_sandstone_black = BLOCKS.register("chiseled_sandstone_black", () -> new ChiseledColor(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.BLACK));
  public static final RegistryObject<ChiseledColor> chiseled_sandstone_blue = BLOCKS.register("chiseled_sandstone_blue", () -> new ChiseledColor(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.BLUE));
  public static final RegistryObject<ChiseledColor> chiseled_sandstone_brown = BLOCKS.register("chiseled_sandstone_brown", () -> new ChiseledColor(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.BROWN));
  public static final RegistryObject<ChiseledColor> chiseled_sandstone_cyan = BLOCKS.register("chiseled_sandstone_cyan", () -> new ChiseledColor(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.CYAN));
  public static final RegistryObject<ChiseledColor> chiseled_sandstone_gray = BLOCKS.register("chiseled_sandstone_gray", () -> new ChiseledColor(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.GRAY));
  public static final RegistryObject<ChiseledColor> chiseled_sandstone_green = BLOCKS.register("chiseled_sandstone_green", () -> new ChiseledColor(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.GREEN));
  public static final RegistryObject<ChiseledColor> chiseled_sandstone_light_blue = BLOCKS.register("chiseled_sandstone_light_blue", () -> new ChiseledColor(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<ChiseledColor> chiseled_sandstone_light_gray = BLOCKS.register("chiseled_sandstone_light_gray", () -> new ChiseledColor(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<ChiseledColor> chiseled_sandstone_lime = BLOCKS.register("chiseled_sandstone_lime", () -> new ChiseledColor(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.LIME));
  public static final RegistryObject<ChiseledColor> chiseled_sandstone_magenta = BLOCKS.register("chiseled_sandstone_magenta", () -> new ChiseledColor(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.MAGENTA));
  public static final RegistryObject<ChiseledColor> chiseled_sandstone_orange = BLOCKS.register("chiseled_sandstone_orange", () -> new ChiseledColor(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.ORANGE));
  public static final RegistryObject<ChiseledColor> chiseled_sandstone_pink = BLOCKS.register("chiseled_sandstone_pink", () -> new ChiseledColor(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.PINK));
  public static final RegistryObject<ChiseledColor> chiseled_sandstone_purple = BLOCKS.register("chiseled_sandstone_purple", () -> new ChiseledColor(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.PURPLE));
  public static final RegistryObject<ChiseledColor> chiseled_sandstone_red = BLOCKS.register("chiseled_sandstone_red", () -> new ChiseledColor(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.RED));
  public static final RegistryObject<ChiseledColor> chiseled_sandstone_white = BLOCKS.register("chiseled_sandstone_white", () -> new ChiseledColor(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.WHITE));
  public static final RegistryObject<ChiseledColor> chiseled_sandstone_yellow = BLOCKS.register("chiseled_sandstone_yellow", () -> new ChiseledColor(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.YELLOW));
  //
  public static final RegistryObject<Block> cut_sandstone_none = BLOCKS.register("cut_sandstone_none", () -> new SandstoneCutColour(Block.Properties.copy(Blocks.CUT_SANDSTONE), DyeColorless.NONE));
  public static final RegistryObject<Block> cut_sandstone_black = BLOCKS.register("cut_sandstone_black", () -> new SandstoneCutColour(Block.Properties.copy(Blocks.CUT_SANDSTONE), DyeColorless.BLACK));
  public static final RegistryObject<Block> cut_sandstone_blue = BLOCKS.register("cut_sandstone_blue", () -> new SandstoneCutColour(Block.Properties.copy(Blocks.CUT_SANDSTONE), DyeColorless.BLUE));
  public static final RegistryObject<Block> cut_sandstone_brown = BLOCKS.register("cut_sandstone_brown", () -> new SandstoneCutColour(Block.Properties.copy(Blocks.CUT_SANDSTONE), DyeColorless.BROWN));
  public static final RegistryObject<Block> cut_sandstone_cyan = BLOCKS.register("cut_sandstone_cyan", () -> new SandstoneCutColour(Block.Properties.copy(Blocks.CUT_SANDSTONE), DyeColorless.CYAN));
  public static final RegistryObject<Block> cut_sandstone_gray = BLOCKS.register("cut_sandstone_gray", () -> new SandstoneCutColour(Block.Properties.copy(Blocks.CUT_SANDSTONE), DyeColorless.GRAY));
  public static final RegistryObject<Block> cut_sandstone_green = BLOCKS.register("cut_sandstone_green", () -> new SandstoneCutColour(Block.Properties.copy(Blocks.CUT_SANDSTONE), DyeColorless.GREEN));
  public static final RegistryObject<Block> cut_sandstone_light_blue = BLOCKS.register("cut_sandstone_light_blue", () -> new SandstoneCutColour(Block.Properties.copy(Blocks.CUT_SANDSTONE), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<Block> cut_sandstone_light_gray = BLOCKS.register("cut_sandstone_light_gray", () -> new SandstoneCutColour(Block.Properties.copy(Blocks.CUT_SANDSTONE), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<Block> cut_sandstone_lime = BLOCKS.register("cut_sandstone_lime", () -> new SandstoneCutColour(Block.Properties.copy(Blocks.CUT_SANDSTONE), DyeColorless.LIME));
  public static final RegistryObject<Block> cut_sandstone_magenta = BLOCKS.register("cut_sandstone_magenta", () -> new SandstoneCutColour(Block.Properties.copy(Blocks.CUT_SANDSTONE), DyeColorless.MAGENTA));
  public static final RegistryObject<Block> cut_sandstone_orange = BLOCKS.register("cut_sandstone_orange", () -> new SandstoneCutColour(Block.Properties.copy(Blocks.CUT_SANDSTONE), DyeColorless.ORANGE));
  public static final RegistryObject<Block> cut_sandstone_pink = BLOCKS.register("cut_sandstone_pink", () -> new SandstoneCutColour(Block.Properties.copy(Blocks.CUT_SANDSTONE), DyeColorless.PINK));
  public static final RegistryObject<Block> cut_sandstone_purple = BLOCKS.register("cut_sandstone_purple", () -> new SandstoneCutColour(Block.Properties.copy(Blocks.CUT_SANDSTONE), DyeColorless.PURPLE));
  public static final RegistryObject<Block> cut_sandstone_red = BLOCKS.register("cut_sandstone_red", () -> new SandstoneCutColour(Block.Properties.copy(Blocks.CUT_SANDSTONE), DyeColorless.RED));
  public static final RegistryObject<Block> cut_sandstone_white = BLOCKS.register("cut_sandstone_white", () -> new SandstoneCutColour(Block.Properties.copy(Blocks.CUT_SANDSTONE), DyeColorless.WHITE));
  public static final RegistryObject<Block> cut_sandstone_yellow = BLOCKS.register("cut_sandstone_yellow", () -> new SandstoneCutColour(Block.Properties.copy(Blocks.CUT_SANDSTONE), DyeColorless.YELLOW));
  //
  public static final RegistryObject<Block> smooth_sandstone_none = BLOCKS.register("smooth_sandstone_none", () -> new SandstoneCutColour(Block.Properties.copy(Blocks.SMOOTH_SANDSTONE), DyeColorless.NONE));
  public static final RegistryObject<Block> smooth_sandstone_black = BLOCKS.register("smooth_sandstone_black", () -> new SandstoneCutColour(Block.Properties.copy(Blocks.SMOOTH_SANDSTONE), DyeColorless.BLACK));
  public static final RegistryObject<Block> smooth_sandstone_blue = BLOCKS.register("smooth_sandstone_blue", () -> new SandstoneCutColour(Block.Properties.copy(Blocks.SMOOTH_SANDSTONE), DyeColorless.BLUE));
  public static final RegistryObject<Block> smooth_sandstone_brown = BLOCKS.register("smooth_sandstone_brown", () -> new SandstoneCutColour(Block.Properties.copy(Blocks.SMOOTH_SANDSTONE), DyeColorless.BROWN));
  public static final RegistryObject<Block> smooth_sandstone_cyan = BLOCKS.register("smooth_sandstone_cyan", () -> new SandstoneCutColour(Block.Properties.copy(Blocks.SMOOTH_SANDSTONE), DyeColorless.CYAN));
  public static final RegistryObject<Block> smooth_sandstone_gray = BLOCKS.register("smooth_sandstone_gray", () -> new SandstoneCutColour(Block.Properties.copy(Blocks.SMOOTH_SANDSTONE), DyeColorless.GRAY));
  public static final RegistryObject<Block> smooth_sandstone_green = BLOCKS.register("smooth_sandstone_green", () -> new SandstoneCutColour(Block.Properties.copy(Blocks.SMOOTH_SANDSTONE), DyeColorless.GREEN));
  public static final RegistryObject<Block> smooth_sandstone_light_blue = BLOCKS.register("smooth_sandstone_light_blue", () -> new SandstoneCutColour(Block.Properties.copy(Blocks.SMOOTH_SANDSTONE), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<Block> smooth_sandstone_light_gray = BLOCKS.register("smooth_sandstone_light_gray", () -> new SandstoneCutColour(Block.Properties.copy(Blocks.SMOOTH_SANDSTONE), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<Block> smooth_sandstone_lime = BLOCKS.register("smooth_sandstone_lime", () -> new SandstoneCutColour(Block.Properties.copy(Blocks.SMOOTH_SANDSTONE), DyeColorless.LIME));
  public static final RegistryObject<Block> smooth_sandstone_magenta = BLOCKS.register("smooth_sandstone_magenta", () -> new SandstoneCutColour(Block.Properties.copy(Blocks.SMOOTH_SANDSTONE), DyeColorless.MAGENTA));
  public static final RegistryObject<Block> smooth_sandstone_orange = BLOCKS.register("smooth_sandstone_orange", () -> new SandstoneCutColour(Block.Properties.copy(Blocks.SMOOTH_SANDSTONE), DyeColorless.ORANGE));
  public static final RegistryObject<Block> smooth_sandstone_pink = BLOCKS.register("smooth_sandstone_pink", () -> new SandstoneCutColour(Block.Properties.copy(Blocks.SMOOTH_SANDSTONE), DyeColorless.PINK));
  public static final RegistryObject<Block> smooth_sandstone_purple = BLOCKS.register("smooth_sandstone_purple", () -> new SandstoneCutColour(Block.Properties.copy(Blocks.SMOOTH_SANDSTONE), DyeColorless.PURPLE));
  public static final RegistryObject<Block> smooth_sandstone_red = BLOCKS.register("smooth_sandstone_red", () -> new SandstoneCutColour(Block.Properties.copy(Blocks.SMOOTH_SANDSTONE), DyeColorless.RED));
  public static final RegistryObject<Block> smooth_sandstone_white = BLOCKS.register("smooth_sandstone_white", () -> new SandstoneCutColour(Block.Properties.copy(Blocks.SMOOTH_SANDSTONE), DyeColorless.WHITE));
  public static final RegistryObject<Block> smooth_sandstone_yellow = BLOCKS.register("smooth_sandstone_yellow", () -> new SandstoneCutColour(Block.Properties.copy(Blocks.SMOOTH_SANDSTONE), DyeColorless.YELLOW));
  //
  public static final RegistryObject<BrickColour> brick_none = BLOCKS.register("brick_none", () -> new BrickColour(Block.Properties.copy(Blocks.BRICKS), DyeColorless.NONE));
  public static final RegistryObject<BrickColour> brick_black = BLOCKS.register("brick_black", () -> new BrickColour(Block.Properties.copy(Blocks.BRICKS), DyeColorless.BLACK));
  public static final RegistryObject<BrickColour> brick_blue = BLOCKS.register("brick_blue", () -> new BrickColour(Block.Properties.copy(Blocks.BRICKS), DyeColorless.BLUE));
  public static final RegistryObject<BrickColour> brick_brown = BLOCKS.register("brick_brown", () -> new BrickColour(Block.Properties.copy(Blocks.BRICKS), DyeColorless.BROWN));
  public static final RegistryObject<BrickColour> brick_cyan = BLOCKS.register("brick_cyan", () -> new BrickColour(Block.Properties.copy(Blocks.BRICKS), DyeColorless.CYAN));
  public static final RegistryObject<BrickColour> brick_gray = BLOCKS.register("brick_gray", () -> new BrickColour(Block.Properties.copy(Blocks.BRICKS), DyeColorless.GRAY));
  public static final RegistryObject<BrickColour> brick_green = BLOCKS.register("brick_green", () -> new BrickColour(Block.Properties.copy(Blocks.BRICKS), DyeColorless.GREEN));
  public static final RegistryObject<BrickColour> brick_light_blue = BLOCKS.register("brick_light_blue", () -> new BrickColour(Block.Properties.copy(Blocks.BRICKS), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<BrickColour> brick_light_gray = BLOCKS.register("brick_light_gray", () -> new BrickColour(Block.Properties.copy(Blocks.BRICKS), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<BrickColour> brick_lime = BLOCKS.register("brick_lime", () -> new BrickColour(Block.Properties.copy(Blocks.BRICKS), DyeColorless.LIME));
  public static final RegistryObject<BrickColour> brick_magenta = BLOCKS.register("brick_magenta", () -> new BrickColour(Block.Properties.copy(Blocks.BRICKS), DyeColorless.MAGENTA));
  public static final RegistryObject<BrickColour> brick_orange = BLOCKS.register("brick_orange", () -> new BrickColour(Block.Properties.copy(Blocks.BRICKS), DyeColorless.ORANGE));
  public static final RegistryObject<BrickColour> brick_pink = BLOCKS.register("brick_pink", () -> new BrickColour(Block.Properties.copy(Blocks.BRICKS), DyeColorless.PINK));
  public static final RegistryObject<BrickColour> brick_purple = BLOCKS.register("brick_purple", () -> new BrickColour(Block.Properties.copy(Blocks.BRICKS), DyeColorless.PURPLE));
  public static final RegistryObject<BrickColour> brick_red = BLOCKS.register("brick_red", () -> new BrickColour(Block.Properties.copy(Blocks.BRICKS), DyeColorless.RED));
  public static final RegistryObject<BrickColour> brick_white = BLOCKS.register("brick_white", () -> new BrickColour(Block.Properties.copy(Blocks.BRICKS), DyeColorless.WHITE));
  public static final RegistryObject<BrickColour> brick_yellow = BLOCKS.register("brick_yellow", () -> new BrickColour(Block.Properties.copy(Blocks.BRICKS), DyeColorless.YELLOW));
  // 
  public static final RegistryObject<Block> slab_planks_none = BLOCKS.register("slab_planks_none", () -> new PlanksSlab(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.NONE));
  public static final RegistryObject<Block> slab_planks_black = BLOCKS.register("slab_planks_black", () -> new PlanksSlab(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.BLACK));
  public static final RegistryObject<Block> slab_planks_blue = BLOCKS.register("slab_planks_blue", () -> new PlanksSlab(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.BLUE));
  public static final RegistryObject<Block> slab_planks_brown = BLOCKS.register("slab_planks_brown", () -> new PlanksSlab(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.BROWN));
  public static final RegistryObject<Block> slab_planks_cyan = BLOCKS.register("slab_planks_cyan", () -> new PlanksSlab(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.CYAN));
  public static final RegistryObject<Block> slab_planks_gray = BLOCKS.register("slab_planks_gray", () -> new PlanksSlab(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.GRAY));
  public static final RegistryObject<Block> slab_planks_green = BLOCKS.register("slab_planks_green", () -> new PlanksSlab(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.GREEN));
  public static final RegistryObject<Block> slab_planks_light_blue = BLOCKS.register("slab_planks_light_blue", () -> new PlanksSlab(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<Block> slab_planks_light_gray = BLOCKS.register("slab_planks_light_gray", () -> new PlanksSlab(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<Block> slab_planks_lime = BLOCKS.register("slab_planks_lime", () -> new PlanksSlab(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.LIME));
  public static final RegistryObject<Block> slab_planks_magenta = BLOCKS.register("slab_planks_magenta", () -> new PlanksSlab(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.MAGENTA));
  public static final RegistryObject<Block> slab_planks_orange = BLOCKS.register("slab_planks_orange", () -> new PlanksSlab(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.ORANGE));
  public static final RegistryObject<Block> slab_planks_pink = BLOCKS.register("slab_planks_pink", () -> new PlanksSlab(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.PINK));
  public static final RegistryObject<Block> slab_planks_purple = BLOCKS.register("slab_planks_purple", () -> new PlanksSlab(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.PURPLE));
  public static final RegistryObject<Block> slab_planks_red = BLOCKS.register("slab_planks_red", () -> new PlanksSlab(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.RED));
  public static final RegistryObject<Block> slab_planks_white = BLOCKS.register("slab_planks_white", () -> new PlanksSlab(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.WHITE));
  public static final RegistryObject<Block> slab_planks_yellow = BLOCKS.register("slab_planks_yellow", () -> new PlanksSlab(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.YELLOW));
  //
  public static final RegistryObject<Block> slab_cobblestone_none = BLOCKS.register("slab_cobblestone_none", () -> new CobblestoneSlab(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.NONE));
  public static final RegistryObject<Block> slab_cobblestone_black = BLOCKS.register("slab_cobblestone_black", () -> new CobblestoneSlab(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.BLACK));
  public static final RegistryObject<Block> slab_cobblestone_blue = BLOCKS.register("slab_cobblestone_blue", () -> new CobblestoneSlab(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.BLUE));
  public static final RegistryObject<Block> slab_cobblestone_brown = BLOCKS.register("slab_cobblestone_brown", () -> new CobblestoneSlab(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.BROWN));
  public static final RegistryObject<Block> slab_cobblestone_cyan = BLOCKS.register("slab_cobblestone_cyan", () -> new CobblestoneSlab(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.CYAN));
  public static final RegistryObject<Block> slab_cobblestone_gray = BLOCKS.register("slab_cobblestone_gray", () -> new CobblestoneSlab(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.GRAY));
  public static final RegistryObject<Block> slab_cobblestone_green = BLOCKS.register("slab_cobblestone_green", () -> new CobblestoneSlab(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.GREEN));
  public static final RegistryObject<Block> slab_cobblestone_light_blue = BLOCKS.register("slab_cobblestone_light_blue", () -> new CobblestoneSlab(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<Block> slab_cobblestone_light_gray = BLOCKS.register("slab_cobblestone_light_gray", () -> new CobblestoneSlab(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<Block> slab_cobblestone_lime = BLOCKS.register("slab_cobblestone_lime", () -> new CobblestoneSlab(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.LIME));
  public static final RegistryObject<Block> slab_cobblestone_magenta = BLOCKS.register("slab_cobblestone_magenta", () -> new CobblestoneSlab(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.MAGENTA));
  public static final RegistryObject<Block> slab_cobblestone_orange = BLOCKS.register("slab_cobblestone_orange", () -> new CobblestoneSlab(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.ORANGE));
  public static final RegistryObject<Block> slab_cobblestone_pink = BLOCKS.register("slab_cobblestone_pink", () -> new CobblestoneSlab(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.PINK));
  public static final RegistryObject<Block> slab_cobblestone_purple = BLOCKS.register("slab_cobblestone_purple", () -> new CobblestoneSlab(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.PURPLE));
  public static final RegistryObject<Block> slab_cobblestone_red = BLOCKS.register("slab_cobblestone_red", () -> new CobblestoneSlab(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.RED));
  public static final RegistryObject<Block> slab_cobblestone_white = BLOCKS.register("slab_cobblestone_white", () -> new CobblestoneSlab(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.WHITE));
  public static final RegistryObject<Block> slab_cobblestone_yellow = BLOCKS.register("slab_cobblestone_yellow", () -> new CobblestoneSlab(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.YELLOW));
  //
  public static final RegistryObject<Block> slab_stone_none = BLOCKS.register("slab_stone_none", () -> new StoneSlab(Block.Properties.copy(Blocks.STONE), DyeColorless.NONE));
  public static final RegistryObject<Block> slab_stone_black = BLOCKS.register("slab_stone_black", () -> new StoneSlab(Block.Properties.copy(Blocks.STONE), DyeColorless.BLACK));
  public static final RegistryObject<Block> slab_stone_blue = BLOCKS.register("slab_stone_blue", () -> new StoneSlab(Block.Properties.copy(Blocks.STONE), DyeColorless.BLUE));
  public static final RegistryObject<Block> slab_stone_brown = BLOCKS.register("slab_stone_brown", () -> new StoneSlab(Block.Properties.copy(Blocks.STONE), DyeColorless.BROWN));
  public static final RegistryObject<Block> slab_stone_cyan = BLOCKS.register("slab_stone_cyan", () -> new StoneSlab(Block.Properties.copy(Blocks.STONE), DyeColorless.CYAN));
  public static final RegistryObject<Block> slab_stone_gray = BLOCKS.register("slab_stone_gray", () -> new StoneSlab(Block.Properties.copy(Blocks.STONE), DyeColorless.GRAY));
  public static final RegistryObject<Block> slab_stone_green = BLOCKS.register("slab_stone_green", () -> new StoneSlab(Block.Properties.copy(Blocks.STONE), DyeColorless.GREEN));
  public static final RegistryObject<Block> slab_stone_light_blue = BLOCKS.register("slab_stone_light_blue", () -> new StoneSlab(Block.Properties.copy(Blocks.STONE), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<Block> slab_stone_light_gray = BLOCKS.register("slab_stone_light_gray", () -> new StoneSlab(Block.Properties.copy(Blocks.STONE), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<Block> slab_stone_lime = BLOCKS.register("slab_stone_lime", () -> new StoneSlab(Block.Properties.copy(Blocks.STONE), DyeColorless.LIME));
  public static final RegistryObject<Block> slab_stone_magenta = BLOCKS.register("slab_stone_magenta", () -> new StoneSlab(Block.Properties.copy(Blocks.STONE), DyeColorless.MAGENTA));
  public static final RegistryObject<Block> slab_stone_orange = BLOCKS.register("slab_stone_orange", () -> new StoneSlab(Block.Properties.copy(Blocks.STONE), DyeColorless.ORANGE));
  public static final RegistryObject<Block> slab_stone_pink = BLOCKS.register("slab_stone_pink", () -> new StoneSlab(Block.Properties.copy(Blocks.STONE), DyeColorless.PINK));
  public static final RegistryObject<Block> slab_stone_purple = BLOCKS.register("slab_stone_purple", () -> new StoneSlab(Block.Properties.copy(Blocks.STONE), DyeColorless.PURPLE));
  public static final RegistryObject<Block> slab_stone_red = BLOCKS.register("slab_stone_red", () -> new StoneSlab(Block.Properties.copy(Blocks.STONE), DyeColorless.RED));
  public static final RegistryObject<Block> slab_stone_white = BLOCKS.register("slab_stone_white", () -> new StoneSlab(Block.Properties.copy(Blocks.STONE), DyeColorless.WHITE));
  public static final RegistryObject<Block> slab_stone_yellow = BLOCKS.register("slab_stone_yellow", () -> new StoneSlab(Block.Properties.copy(Blocks.STONE), DyeColorless.YELLOW));
  //
  public static final RegistryObject<Block> slab_stone_bricks_none = BLOCKS.register("slab_stone_bricks_none", () -> new StonebrickSlab(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.NONE));
  public static final RegistryObject<Block> slab_stone_bricks_black = BLOCKS.register("slab_stone_bricks_black", () -> new StonebrickSlab(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.BLACK));
  public static final RegistryObject<Block> slab_stone_bricks_blue = BLOCKS.register("slab_stone_bricks_blue", () -> new StonebrickSlab(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.BLUE));
  public static final RegistryObject<Block> slab_stone_bricks_brown = BLOCKS.register("slab_stone_bricks_brown", () -> new StonebrickSlab(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.BROWN));
  public static final RegistryObject<Block> slab_stone_bricks_cyan = BLOCKS.register("slab_stone_bricks_cyan", () -> new StonebrickSlab(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.CYAN));
  public static final RegistryObject<Block> slab_stone_bricks_gray = BLOCKS.register("slab_stone_bricks_gray", () -> new StonebrickSlab(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.GRAY));
  public static final RegistryObject<Block> slab_stone_bricks_green = BLOCKS.register("slab_stone_bricks_green", () -> new StonebrickSlab(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.GREEN));
  public static final RegistryObject<Block> slab_stone_bricks_light_blue = BLOCKS.register("slab_stone_bricks_light_blue", () -> new StonebrickSlab(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<Block> slab_stone_bricks_light_gray = BLOCKS.register("slab_stone_bricks_light_gray", () -> new StonebrickSlab(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<Block> slab_stone_bricks_lime = BLOCKS.register("slab_stone_bricks_lime", () -> new StonebrickSlab(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.LIME));
  public static final RegistryObject<Block> slab_stone_bricks_magenta = BLOCKS.register("slab_stone_bricks_magenta", () -> new StonebrickSlab(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.MAGENTA));
  public static final RegistryObject<Block> slab_stone_bricks_orange = BLOCKS.register("slab_stone_bricks_orange", () -> new StonebrickSlab(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.ORANGE));
  public static final RegistryObject<Block> slab_stone_bricks_pink = BLOCKS.register("slab_stone_bricks_pink", () -> new StonebrickSlab(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.PINK));
  public static final RegistryObject<Block> slab_stone_bricks_purple = BLOCKS.register("slab_stone_bricks_purple", () -> new StonebrickSlab(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.PURPLE));
  public static final RegistryObject<Block> slab_stone_bricks_red = BLOCKS.register("slab_stone_bricks_red", () -> new StonebrickSlab(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.RED));
  public static final RegistryObject<Block> slab_stone_bricks_white = BLOCKS.register("slab_stone_bricks_white", () -> new StonebrickSlab(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.WHITE));
  public static final RegistryObject<Block> slab_stone_bricks_yellow = BLOCKS.register("slab_stone_bricks_yellow", () -> new StonebrickSlab(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.YELLOW));
  //
  public static final RegistryObject<Block> slab_sandstone_none = BLOCKS.register("slab_sandstone_none", () -> new SandstoneSlab(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.NONE));
  public static final RegistryObject<Block> slab_sandstone_black = BLOCKS.register("slab_sandstone_black", () -> new SandstoneSlab(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.BLACK));
  public static final RegistryObject<Block> slab_sandstone_blue = BLOCKS.register("slab_sandstone_blue", () -> new SandstoneSlab(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.BLUE));
  public static final RegistryObject<Block> slab_sandstone_brown = BLOCKS.register("slab_sandstone_brown", () -> new SandstoneSlab(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.BROWN));
  public static final RegistryObject<Block> slab_sandstone_cyan = BLOCKS.register("slab_sandstone_cyan", () -> new SandstoneSlab(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.CYAN));
  public static final RegistryObject<Block> slab_sandstone_gray = BLOCKS.register("slab_sandstone_gray", () -> new SandstoneSlab(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.GRAY));
  public static final RegistryObject<Block> slab_sandstone_green = BLOCKS.register("slab_sandstone_green", () -> new SandstoneSlab(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.GREEN));
  public static final RegistryObject<Block> slab_sandstone_light_blue = BLOCKS.register("slab_sandstone_light_blue", () -> new SandstoneSlab(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<Block> slab_sandstone_light_gray = BLOCKS.register("slab_sandstone_light_gray", () -> new SandstoneSlab(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<Block> slab_sandstone_lime = BLOCKS.register("slab_sandstone_lime", () -> new SandstoneSlab(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.LIME));
  public static final RegistryObject<Block> slab_sandstone_magenta = BLOCKS.register("slab_sandstone_magenta", () -> new SandstoneSlab(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.MAGENTA));
  public static final RegistryObject<Block> slab_sandstone_orange = BLOCKS.register("slab_sandstone_orange", () -> new SandstoneSlab(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.ORANGE));
  public static final RegistryObject<Block> slab_sandstone_pink = BLOCKS.register("slab_sandstone_pink", () -> new SandstoneSlab(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.PINK));
  public static final RegistryObject<Block> slab_sandstone_purple = BLOCKS.register("slab_sandstone_purple", () -> new SandstoneSlab(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.PURPLE));
  public static final RegistryObject<Block> slab_sandstone_red = BLOCKS.register("slab_sandstone_red", () -> new SandstoneSlab(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.RED));
  public static final RegistryObject<Block> slab_sandstone_white = BLOCKS.register("slab_sandstone_white", () -> new SandstoneSlab(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.WHITE));
  public static final RegistryObject<Block> slab_sandstone_yellow = BLOCKS.register("slab_sandstone_yellow", () -> new SandstoneSlab(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.YELLOW));
  //
  public static final RegistryObject<Block> slab_brick_none = BLOCKS.register("slab_brick_none", () -> new BrickSlab(Block.Properties.copy(Blocks.BRICKS), DyeColorless.NONE));
  public static final RegistryObject<Block> slab_brick_black = BLOCKS.register("slab_brick_black", () -> new BrickSlab(Block.Properties.copy(Blocks.BRICKS), DyeColorless.BLACK));
  public static final RegistryObject<Block> slab_brick_blue = BLOCKS.register("slab_brick_blue", () -> new BrickSlab(Block.Properties.copy(Blocks.BRICKS), DyeColorless.BLUE));
  public static final RegistryObject<Block> slab_brick_brown = BLOCKS.register("slab_brick_brown", () -> new BrickSlab(Block.Properties.copy(Blocks.BRICKS), DyeColorless.BROWN));
  public static final RegistryObject<Block> slab_brick_cyan = BLOCKS.register("slab_brick_cyan", () -> new BrickSlab(Block.Properties.copy(Blocks.BRICKS), DyeColorless.CYAN));
  public static final RegistryObject<Block> slab_brick_gray = BLOCKS.register("slab_brick_gray", () -> new BrickSlab(Block.Properties.copy(Blocks.BRICKS), DyeColorless.GRAY));
  public static final RegistryObject<Block> slab_brick_green = BLOCKS.register("slab_brick_green", () -> new BrickSlab(Block.Properties.copy(Blocks.BRICKS), DyeColorless.GREEN));
  public static final RegistryObject<Block> slab_brick_light_blue = BLOCKS.register("slab_brick_light_blue", () -> new BrickSlab(Block.Properties.copy(Blocks.BRICKS), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<Block> slab_brick_light_gray = BLOCKS.register("slab_brick_light_gray", () -> new BrickSlab(Block.Properties.copy(Blocks.BRICKS), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<Block> slab_brick_lime = BLOCKS.register("slab_brick_lime", () -> new BrickSlab(Block.Properties.copy(Blocks.BRICKS), DyeColorless.LIME));
  public static final RegistryObject<Block> slab_brick_magenta = BLOCKS.register("slab_brick_magenta", () -> new BrickSlab(Block.Properties.copy(Blocks.BRICKS), DyeColorless.MAGENTA));
  public static final RegistryObject<Block> slab_brick_orange = BLOCKS.register("slab_brick_orange", () -> new BrickSlab(Block.Properties.copy(Blocks.BRICKS), DyeColorless.ORANGE));
  public static final RegistryObject<Block> slab_brick_pink = BLOCKS.register("slab_brick_pink", () -> new BrickSlab(Block.Properties.copy(Blocks.BRICKS), DyeColorless.PINK));
  public static final RegistryObject<Block> slab_brick_purple = BLOCKS.register("slab_brick_purple", () -> new BrickSlab(Block.Properties.copy(Blocks.BRICKS), DyeColorless.PURPLE));
  public static final RegistryObject<Block> slab_brick_red = BLOCKS.register("slab_brick_red", () -> new BrickSlab(Block.Properties.copy(Blocks.BRICKS), DyeColorless.RED));
  public static final RegistryObject<Block> slab_brick_white = BLOCKS.register("slab_brick_white", () -> new BrickSlab(Block.Properties.copy(Blocks.BRICKS), DyeColorless.WHITE));
  public static final RegistryObject<Block> slab_brick_yellow = BLOCKS.register("slab_brick_yellow", () -> new BrickSlab(Block.Properties.copy(Blocks.BRICKS), DyeColorless.YELLOW));
  //
  public static final RegistryObject<Block> stairs_brick_none = BLOCKS.register("stairs_brick_none", () -> new BrickStair(() -> brick_none.get().defaultBlockState(), Block.Properties.copy(Blocks.BRICKS), DyeColorless.NONE));
  public static final RegistryObject<Block> stairs_brick_black = BLOCKS.register("stairs_brick_black", () -> new BrickStair(() -> brick_black.get().defaultBlockState(), Block.Properties.copy(Blocks.BRICKS), DyeColorless.BLACK));
  public static final RegistryObject<Block> stairs_brick_blue = BLOCKS.register("stairs_brick_blue", () -> new BrickStair(() -> brick_blue.get().defaultBlockState(), Block.Properties.copy(Blocks.BRICKS), DyeColorless.BLUE));
  public static final RegistryObject<Block> stairs_brick_brown = BLOCKS.register("stairs_brick_brown", () -> new BrickStair(() -> brick_brown.get().defaultBlockState(), Block.Properties.copy(Blocks.BRICKS), DyeColorless.BROWN));
  public static final RegistryObject<Block> stairs_brick_cyan = BLOCKS.register("stairs_brick_cyan", () -> new BrickStair(() -> brick_cyan.get().defaultBlockState(), Block.Properties.copy(Blocks.BRICKS), DyeColorless.CYAN));
  public static final RegistryObject<Block> stairs_brick_gray = BLOCKS.register("stairs_brick_gray", () -> new BrickStair(() -> brick_gray.get().defaultBlockState(), Block.Properties.copy(Blocks.BRICKS), DyeColorless.GRAY));
  public static final RegistryObject<Block> stairs_brick_green = BLOCKS.register("stairs_brick_green", () -> new BrickStair(() -> brick_green.get().defaultBlockState(), Block.Properties.copy(Blocks.BRICKS), DyeColorless.GREEN));
  public static final RegistryObject<Block> stairs_brick_light_blue = BLOCKS.register("stairs_brick_light_blue", () -> new BrickStair(() -> brick_light_blue.get().defaultBlockState(), Block.Properties.copy(Blocks.BRICKS), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<Block> stairs_brick_light_gray = BLOCKS.register("stairs_brick_light_gray", () -> new BrickStair(() -> brick_light_gray.get().defaultBlockState(), Block.Properties.copy(Blocks.BRICKS), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<Block> stairs_brick_lime = BLOCKS.register("stairs_brick_lime", () -> new BrickStair(() -> brick_lime.get().defaultBlockState(), Block.Properties.copy(Blocks.BRICKS), DyeColorless.LIME));
  public static final RegistryObject<Block> stairs_brick_magenta = BLOCKS.register("stairs_brick_magenta", () -> new BrickStair(() -> brick_magenta.get().defaultBlockState(), Block.Properties.copy(Blocks.BRICKS), DyeColorless.MAGENTA));
  public static final RegistryObject<Block> stairs_brick_orange = BLOCKS.register("stairs_brick_orange", () -> new BrickStair(() -> brick_orange.get().defaultBlockState(), Block.Properties.copy(Blocks.BRICKS), DyeColorless.ORANGE));
  public static final RegistryObject<Block> stairs_brick_pink = BLOCKS.register("stairs_brick_pink", () -> new BrickStair(() -> brick_pink.get().defaultBlockState(), Block.Properties.copy(Blocks.BRICKS), DyeColorless.PINK));
  public static final RegistryObject<Block> stairs_brick_purple = BLOCKS.register("stairs_brick_purple", () -> new BrickStair(() -> brick_purple.get().defaultBlockState(), Block.Properties.copy(Blocks.BRICKS), DyeColorless.PURPLE));
  public static final RegistryObject<Block> stairs_brick_red = BLOCKS.register("stairs_brick_red", () -> new BrickStair(() -> brick_red.get().defaultBlockState(), Block.Properties.copy(Blocks.BRICKS), DyeColorless.RED));
  public static final RegistryObject<Block> stairs_brick_white = BLOCKS.register("stairs_brick_white", () -> new BrickStair(() -> brick_white.get().defaultBlockState(), Block.Properties.copy(Blocks.BRICKS), DyeColorless.WHITE));
  public static final RegistryObject<Block> stairs_brick_yellow = BLOCKS.register("stairs_brick_yellow", () -> new BrickStair(() -> brick_yellow.get().defaultBlockState(), Block.Properties.copy(Blocks.BRICKS), DyeColorless.YELLOW));
  //
  public static final RegistryObject<Block> stairs_planks_none = BLOCKS.register("stairs_planks_none", () -> new PlanksStair(() -> PLANKS_none.get().defaultBlockState(), Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.NONE));
  public static final RegistryObject<Block> stairs_planks_black = BLOCKS.register("stairs_planks_black", () -> new PlanksStair(() -> planks_black.get().defaultBlockState(), Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.BLACK));
  public static final RegistryObject<Block> stairs_planks_blue = BLOCKS.register("stairs_planks_blue", () -> new PlanksStair(() -> planks_blue.get().defaultBlockState(), Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.BLUE));
  public static final RegistryObject<Block> stairs_planks_brown = BLOCKS.register("stairs_planks_brown", () -> new PlanksStair(() -> PLANKS_brown.get().defaultBlockState(), Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.BROWN));
  public static final RegistryObject<Block> stairs_planks_cyan = BLOCKS.register("stairs_planks_cyan", () -> new PlanksStair(() -> PLANKS_cyan.get().defaultBlockState(), Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.CYAN));
  public static final RegistryObject<Block> stairs_planks_gray = BLOCKS.register("stairs_planks_gray", () -> new PlanksStair(() -> PLANKS_gray.get().defaultBlockState(), Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.GRAY));
  public static final RegistryObject<Block> stairs_planks_green = BLOCKS.register("stairs_planks_green", () -> new PlanksStair(() -> PLANKS_green.get().defaultBlockState(), Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.GREEN));
  public static final RegistryObject<Block> stairs_planks_light_blue = BLOCKS.register("stairs_planks_light_blue", () -> new PlanksStair(() -> PLANKS_light_blue.get().defaultBlockState(), Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<Block> stairs_planks_light_gray = BLOCKS.register("stairs_planks_light_gray", () -> new PlanksStair(() -> PLANKS_light_gray.get().defaultBlockState(), Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<Block> stairs_planks_lime = BLOCKS.register("stairs_planks_lime", () -> new PlanksStair(() -> PLANKS_lime.get().defaultBlockState(), Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.LIME));
  public static final RegistryObject<Block> stairs_planks_magenta = BLOCKS.register("stairs_planks_magenta", () -> new PlanksStair(() -> PLANKS_magenta.get().defaultBlockState(), Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.MAGENTA));
  public static final RegistryObject<Block> stairs_planks_orange = BLOCKS.register("stairs_planks_orange", () -> new PlanksStair(() -> PLANKS_orange.get().defaultBlockState(), Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.ORANGE));
  public static final RegistryObject<Block> stairs_planks_pink = BLOCKS.register("stairs_planks_pink", () -> new PlanksStair(() -> PLANKS_pink.get().defaultBlockState(), Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.PINK));
  public static final RegistryObject<Block> stairs_planks_purple = BLOCKS.register("stairs_planks_purple", () -> new PlanksStair(() -> PLANKS_purple.get().defaultBlockState(), Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.PURPLE));
  public static final RegistryObject<Block> stairs_planks_red = BLOCKS.register("stairs_planks_red", () -> new PlanksStair(() -> PLANKS_red.get().defaultBlockState(), Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.RED));
  public static final RegistryObject<Block> stairs_planks_white = BLOCKS.register("stairs_planks_white", () -> new PlanksStair(() -> PLANKS_white.get().defaultBlockState(), Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.WHITE));
  public static final RegistryObject<Block> stairs_planks_yellow = BLOCKS.register("stairs_planks_yellow", () -> new PlanksStair(() -> PLANKS_yellow.get().defaultBlockState(), Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.YELLOW));
  //
  public static final RegistryObject<Block> stairs_stone_none = BLOCKS.register("stairs_stone_none", () -> new StoneStair(() -> stone_none.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.NONE));
  public static final RegistryObject<Block> stairs_stone_black = BLOCKS.register("stairs_stone_black", () -> new StoneStair(() -> stone_black.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.BLACK));
  public static final RegistryObject<Block> stairs_stone_blue = BLOCKS.register("stairs_stone_blue", () -> new StoneStair(() -> stone_blue.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.BLUE));
  public static final RegistryObject<Block> stairs_stone_brown = BLOCKS.register("stairs_stone_brown", () -> new StoneStair(() -> stone_brown.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.BROWN));
  public static final RegistryObject<Block> stairs_stone_cyan = BLOCKS.register("stairs_stone_cyan", () -> new StoneStair(() -> stone_cyan.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.CYAN));
  public static final RegistryObject<Block> stairs_stone_gray = BLOCKS.register("stairs_stone_gray", () -> new StoneStair(() -> stone_gray.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.GRAY));
  public static final RegistryObject<Block> stairs_stone_green = BLOCKS.register("stairs_stone_green", () -> new StoneStair(() -> stone_green.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.GREEN));
  public static final RegistryObject<Block> stairs_stone_light_blue = BLOCKS.register("stairs_stone_light_blue", () -> new StoneStair(() -> stone_light_blue.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<Block> stairs_stone_light_gray = BLOCKS.register("stairs_stone_light_gray", () -> new StoneStair(() -> stone_light_gray.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<Block> stairs_stone_lime = BLOCKS.register("stairs_stone_lime", () -> new StoneStair(() -> stone_lime.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.LIME));
  public static final RegistryObject<Block> stairs_stone_magenta = BLOCKS.register("stairs_stone_magenta", () -> new StoneStair(() -> stone_magenta.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.MAGENTA));
  public static final RegistryObject<Block> stairs_stone_orange = BLOCKS.register("stairs_stone_orange", () -> new StoneStair(() -> stone_orange.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.ORANGE));
  public static final RegistryObject<Block> stairs_stone_pink = BLOCKS.register("stairs_stone_pink", () -> new StoneStair(() -> stone_pink.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.PINK));
  public static final RegistryObject<Block> stairs_stone_purple = BLOCKS.register("stairs_stone_purple", () -> new StoneStair(() -> stone_purple.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.PURPLE));
  public static final RegistryObject<Block> stairs_stone_red = BLOCKS.register("stairs_stone_red", () -> new StoneStair(() -> stone_red.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.RED));
  public static final RegistryObject<Block> stairs_stone_white = BLOCKS.register("stairs_stone_white", () -> new StoneStair(() -> stone_white.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.WHITE));
  public static final RegistryObject<Block> stairs_stone_yellow = BLOCKS.register("stairs_stone_yellow", () -> new StoneStair(() -> stone_yellow.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.YELLOW));
  //
  public static final RegistryObject<Block> stairs_cobblestone_none = BLOCKS.register("stairs_cobblestone_none", () -> new CobblestoneStair(() -> cobblestone_none.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.NONE));
  public static final RegistryObject<Block> stairs_cobblestone_black = BLOCKS.register("stairs_cobblestone_black", () -> new CobblestoneStair(() -> cobblestone_black.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.BLACK));
  public static final RegistryObject<Block> stairs_cobblestone_blue = BLOCKS.register("stairs_cobblestone_blue", () -> new CobblestoneStair(() -> cobblestone_blue.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.BLUE));
  public static final RegistryObject<Block> stairs_cobblestone_brown = BLOCKS.register("stairs_cobblestone_brown", () -> new CobblestoneStair(() -> cobblestone_brown.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.BROWN));
  public static final RegistryObject<Block> stairs_cobblestone_cyan = BLOCKS.register("stairs_cobblestone_cyan", () -> new CobblestoneStair(() -> cobblestone_cyan.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.CYAN));
  public static final RegistryObject<Block> stairs_cobblestone_gray = BLOCKS.register("stairs_cobblestone_gray", () -> new CobblestoneStair(() -> cobblestone_gray.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.GRAY));
  public static final RegistryObject<Block> stairs_cobblestone_green = BLOCKS.register("stairs_cobblestone_green", () -> new CobblestoneStair(() -> cobblestone_green.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.GREEN));
  public static final RegistryObject<Block> stairs_cobblestone_light_blue = BLOCKS.register("stairs_cobblestone_light_blue", () -> new CobblestoneStair(() -> cobblestone_light_blue.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<Block> stairs_cobblestone_light_gray = BLOCKS.register("stairs_cobblestone_light_gray", () -> new CobblestoneStair(() -> cobblestone_light_gray.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<Block> stairs_cobblestone_lime = BLOCKS.register("stairs_cobblestone_lime", () -> new CobblestoneStair(() -> cobblestone_lime.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.LIME));
  public static final RegistryObject<Block> stairs_cobblestone_magenta = BLOCKS.register("stairs_cobblestone_magenta", () -> new CobblestoneStair(() -> cobblestone_magenta.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.MAGENTA));
  public static final RegistryObject<Block> stairs_cobblestone_orange = BLOCKS.register("stairs_cobblestone_orange", () -> new CobblestoneStair(() -> cobblestone_orange.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.ORANGE));
  public static final RegistryObject<Block> stairs_cobblestone_pink = BLOCKS.register("stairs_cobblestone_pink", () -> new CobblestoneStair(() -> cobblestone_pink.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.PINK));
  public static final RegistryObject<Block> stairs_cobblestone_purple = BLOCKS.register("stairs_cobblestone_purple", () -> new CobblestoneStair(() -> cobblestone_purple.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.PURPLE));
  public static final RegistryObject<Block> stairs_cobblestone_red = BLOCKS.register("stairs_cobblestone_red", () -> new CobblestoneStair(() -> cobblestone_red.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.RED));
  public static final RegistryObject<Block> stairs_cobblestone_white = BLOCKS.register("stairs_cobblestone_white", () -> new CobblestoneStair(() -> cobblestone_white.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.WHITE));
  public static final RegistryObject<Block> stairs_cobblestone_yellow = BLOCKS.register("stairs_cobblestone_yellow", () -> new CobblestoneStair(() -> cobblestone_yellow.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.YELLOW));
  //
  public static final RegistryObject<Block> stairs_sandstone_none = BLOCKS.register("stairs_sandstone_none", () -> new SandstoneStair(() -> sandstone_none.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.NONE));
  public static final RegistryObject<Block> stairs_sandstone_black = BLOCKS.register("stairs_sandstone_black", () -> new SandstoneStair(() -> sandstone_black.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.BLACK));
  public static final RegistryObject<Block> stairs_sandstone_blue = BLOCKS.register("stairs_sandstone_blue", () -> new SandstoneStair(() -> sandstone_blue.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.BLUE));
  public static final RegistryObject<Block> stairs_sandstone_brown = BLOCKS.register("stairs_sandstone_brown", () -> new SandstoneStair(() -> sandstone_brown.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.BROWN));
  public static final RegistryObject<Block> stairs_sandstone_cyan = BLOCKS.register("stairs_sandstone_cyan", () -> new SandstoneStair(() -> sandstone_cyan.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.CYAN));
  public static final RegistryObject<Block> stairs_sandstone_gray = BLOCKS.register("stairs_sandstone_gray", () -> new SandstoneStair(() -> sandstone_gray.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.GRAY));
  public static final RegistryObject<Block> stairs_sandstone_green = BLOCKS.register("stairs_sandstone_green", () -> new SandstoneStair(() -> sandstone_green.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.GREEN));
  public static final RegistryObject<Block> stairs_sandstone_light_blue = BLOCKS.register("stairs_sandstone_light_blue", () -> new SandstoneStair(() -> sandstone_light_blue.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<Block> stairs_sandstone_light_gray = BLOCKS.register("stairs_sandstone_light_gray", () -> new SandstoneStair(() -> sandstone_light_gray.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<Block> stairs_sandstone_lime = BLOCKS.register("stairs_sandstone_lime", () -> new SandstoneStair(() -> sandstone_lime.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.LIME));
  public static final RegistryObject<Block> stairs_sandstone_magenta = BLOCKS.register("stairs_sandstone_magenta", () -> new SandstoneStair(() -> sandstone_magenta.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.MAGENTA));
  public static final RegistryObject<Block> stairs_sandstone_orange = BLOCKS.register("stairs_sandstone_orange", () -> new SandstoneStair(() -> sandstone_orange.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.ORANGE));
  public static final RegistryObject<Block> stairs_sandstone_pink = BLOCKS.register("stairs_sandstone_pink", () -> new SandstoneStair(() -> sandstone_pink.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.PINK));
  public static final RegistryObject<Block> stairs_sandstone_purple = BLOCKS.register("stairs_sandstone_purple", () -> new SandstoneStair(() -> sandstone_purple.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.PURPLE));
  public static final RegistryObject<Block> stairs_sandstone_red = BLOCKS.register("stairs_sandstone_red", () -> new SandstoneStair(() -> sandstone_red.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.RED));
  public static final RegistryObject<Block> stairs_sandstone_white = BLOCKS.register("stairs_sandstone_white", () -> new SandstoneStair(() -> sandstone_white.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.WHITE));
  public static final RegistryObject<Block> stairs_sandstone_yellow = BLOCKS.register("stairs_sandstone_yellow", () -> new SandstoneStair(() -> sandstone_yellow.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.YELLOW));
  //
  public static final RegistryObject<Block> stairs_stone_bricks_none = BLOCKS.register("stairs_stone_bricks_none", () -> new StonebrickStair(() -> stone_bricks_none.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.NONE));
  public static final RegistryObject<Block> stairs_stone_bricks_black = BLOCKS.register("stairs_stone_bricks_black", () -> new StonebrickStair(() -> stone_bricks_black.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.BLACK));
  public static final RegistryObject<Block> stairs_stone_bricks_blue = BLOCKS.register("stairs_stone_bricks_blue", () -> new StonebrickStair(() -> stone_bricks_blue.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.BLUE));
  public static final RegistryObject<Block> stairs_stone_bricks_brown = BLOCKS.register("stairs_stone_bricks_brown", () -> new StonebrickStair(() -> stone_bricks_brown.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.BROWN));
  public static final RegistryObject<Block> stairs_stone_bricks_cyan = BLOCKS.register("stairs_stone_bricks_cyan", () -> new StonebrickStair(() -> stone_bricks_cyan.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.CYAN));
  public static final RegistryObject<Block> stairs_stone_bricks_gray = BLOCKS.register("stairs_stone_bricks_gray", () -> new StonebrickStair(() -> stone_bricks_gray.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.GRAY));
  public static final RegistryObject<Block> stairs_stone_bricks_green = BLOCKS.register("stairs_stone_bricks_green", () -> new StonebrickStair(() -> stone_bricks_green.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.GREEN));
  public static final RegistryObject<Block> stairs_stone_bricks_light_blue = BLOCKS.register("stairs_stone_bricks_light_blue", () -> new StonebrickStair(() -> stone_bricks_light_blue.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<Block> stairs_stone_bricks_light_gray = BLOCKS.register("stairs_stone_bricks_light_gray", () -> new StonebrickStair(() -> stone_bricks_light_gray.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<Block> stairs_stone_bricks_lime = BLOCKS.register("stairs_stone_bricks_lime", () -> new StonebrickStair(() -> stone_bricks_lime.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.LIME));
  public static final RegistryObject<Block> stairs_stone_bricks_magenta = BLOCKS.register("stairs_stone_bricks_magenta", () -> new StonebrickStair(() -> stone_bricks_magenta.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.MAGENTA));
  public static final RegistryObject<Block> stairs_stone_bricks_orange = BLOCKS.register("stairs_stone_bricks_orange", () -> new StonebrickStair(() -> stone_bricks_orange.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.ORANGE));
  public static final RegistryObject<Block> stairs_stone_bricks_pink = BLOCKS.register("stairs_stone_bricks_pink", () -> new StonebrickStair(() -> stone_bricks_pink.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.PINK));
  public static final RegistryObject<Block> stairs_stone_bricks_purple = BLOCKS.register("stairs_stone_bricks_purple", () -> new StonebrickStair(() -> stone_bricks_purple.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.PURPLE));
  public static final RegistryObject<Block> stairs_stone_bricks_red = BLOCKS.register("stairs_stone_bricks_red", () -> new StonebrickStair(() -> stone_bricks_red.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.RED));
  public static final RegistryObject<Block> stairs_stone_bricks_white = BLOCKS.register("stairs_stone_bricks_white", () -> new StonebrickStair(() -> stone_bricks_white.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.WHITE));
  public static final RegistryObject<Block> stairs_stone_bricks_yellow = BLOCKS.register("stairs_stone_bricks_yellow", () -> new StonebrickStair(() -> stone_bricks_yellow.get().defaultBlockState(), Block.Properties.copy(Blocks.STONE), DyeColorless.YELLOW));
  //
  public static final RegistryObject<Block> wall_stone_none = BLOCKS.register("wall_stone_none", () -> new StoneWall(Block.Properties.copy(Blocks.STONE), DyeColorless.NONE));
  public static final RegistryObject<Block> wall_stone_black = BLOCKS.register("wall_stone_black", () -> new StoneWall(Block.Properties.copy(Blocks.STONE), DyeColorless.BLACK));
  public static final RegistryObject<Block> wall_stone_blue = BLOCKS.register("wall_stone_blue", () -> new StoneWall(Block.Properties.copy(Blocks.STONE), DyeColorless.BLUE));
  public static final RegistryObject<Block> wall_stone_brown = BLOCKS.register("wall_stone_brown", () -> new StoneWall(Block.Properties.copy(Blocks.STONE), DyeColorless.BROWN));
  public static final RegistryObject<Block> wall_stone_cyan = BLOCKS.register("wall_stone_cyan", () -> new StoneWall(Block.Properties.copy(Blocks.STONE), DyeColorless.CYAN));
  public static final RegistryObject<Block> wall_stone_gray = BLOCKS.register("wall_stone_gray", () -> new StoneWall(Block.Properties.copy(Blocks.STONE), DyeColorless.GRAY));
  public static final RegistryObject<Block> wall_stone_green = BLOCKS.register("wall_stone_green", () -> new StoneWall(Block.Properties.copy(Blocks.STONE), DyeColorless.GREEN));
  public static final RegistryObject<Block> wall_stone_light_blue = BLOCKS.register("wall_stone_light_blue", () -> new StoneWall(Block.Properties.copy(Blocks.STONE), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<Block> wall_stone_light_gray = BLOCKS.register("wall_stone_light_gray", () -> new StoneWall(Block.Properties.copy(Blocks.STONE), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<Block> wall_stone_lime = BLOCKS.register("wall_stone_lime", () -> new StoneWall(Block.Properties.copy(Blocks.STONE), DyeColorless.LIME));
  public static final RegistryObject<Block> wall_stone_magenta = BLOCKS.register("wall_stone_magenta", () -> new StoneWall(Block.Properties.copy(Blocks.STONE), DyeColorless.MAGENTA));
  public static final RegistryObject<Block> wall_stone_orange = BLOCKS.register("wall_stone_orange", () -> new StoneWall(Block.Properties.copy(Blocks.STONE), DyeColorless.ORANGE));
  public static final RegistryObject<Block> wall_stone_pink = BLOCKS.register("wall_stone_pink", () -> new StoneWall(Block.Properties.copy(Blocks.STONE), DyeColorless.PINK));
  public static final RegistryObject<Block> wall_stone_purple = BLOCKS.register("wall_stone_purple", () -> new StoneWall(Block.Properties.copy(Blocks.STONE), DyeColorless.PURPLE));
  public static final RegistryObject<Block> wall_stone_red = BLOCKS.register("wall_stone_red", () -> new StoneWall(Block.Properties.copy(Blocks.STONE), DyeColorless.RED));
  public static final RegistryObject<Block> wall_stone_white = BLOCKS.register("wall_stone_white", () -> new StoneWall(Block.Properties.copy(Blocks.STONE), DyeColorless.WHITE));
  public static final RegistryObject<Block> wall_stone_yellow = BLOCKS.register("wall_stone_yellow", () -> new StoneWall(Block.Properties.copy(Blocks.STONE), DyeColorless.YELLOW));
  //
  public static final RegistryObject<Block> wall_stone_bricks_none = BLOCKS.register("wall_stone_bricks_none", () -> new StonebrickWall(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.NONE));
  public static final RegistryObject<Block> wall_stone_bricks_black = BLOCKS.register("wall_stone_bricks_black", () -> new StonebrickWall(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.BLACK));
  public static final RegistryObject<Block> wall_stone_bricks_blue = BLOCKS.register("wall_stone_bricks_blue", () -> new StonebrickWall(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.BLUE));
  public static final RegistryObject<Block> wall_stone_bricks_brown = BLOCKS.register("wall_stone_bricks_brown", () -> new StonebrickWall(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.BROWN));
  public static final RegistryObject<Block> wall_stone_bricks_cyan = BLOCKS.register("wall_stone_bricks_cyan", () -> new StonebrickWall(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.CYAN));
  public static final RegistryObject<Block> wall_stone_bricks_gray = BLOCKS.register("wall_stone_bricks_gray", () -> new StonebrickWall(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.GRAY));
  public static final RegistryObject<Block> wall_stone_bricks_green = BLOCKS.register("wall_stone_bricks_green", () -> new StonebrickWall(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.GREEN));
  public static final RegistryObject<Block> wall_stone_bricks_light_blue = BLOCKS.register("wall_stone_bricks_light_blue", () -> new StonebrickWall(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<Block> wall_stone_bricks_light_gray = BLOCKS.register("wall_stone_bricks_light_gray", () -> new StonebrickWall(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<Block> wall_stone_bricks_lime = BLOCKS.register("wall_stone_bricks_lime", () -> new StonebrickWall(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.LIME));
  public static final RegistryObject<Block> wall_stone_bricks_magenta = BLOCKS.register("wall_stone_bricks_magenta", () -> new StonebrickWall(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.MAGENTA));
  public static final RegistryObject<Block> wall_stone_bricks_orange = BLOCKS.register("wall_stone_bricks_orange", () -> new StonebrickWall(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.ORANGE));
  public static final RegistryObject<Block> wall_stone_bricks_pink = BLOCKS.register("wall_stone_bricks_pink", () -> new StonebrickWall(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.PINK));
  public static final RegistryObject<Block> wall_stone_bricks_purple = BLOCKS.register("wall_stone_bricks_purple", () -> new StonebrickWall(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.PURPLE));
  public static final RegistryObject<Block> wall_stone_bricks_red = BLOCKS.register("wall_stone_bricks_red", () -> new StonebrickWall(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.RED));
  public static final RegistryObject<Block> wall_stone_bricks_white = BLOCKS.register("wall_stone_bricks_white", () -> new StonebrickWall(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.WHITE));
  public static final RegistryObject<Block> wall_stone_bricks_yellow = BLOCKS.register("wall_stone_bricks_yellow", () -> new StonebrickWall(Block.Properties.copy(Blocks.STONE_BRICKS), DyeColorless.YELLOW));
  // 
  public static final RegistryObject<Block> wall_sandstone_none = BLOCKS.register("wall_sandstone_none", () -> new SandstoneWall(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.NONE));
  public static final RegistryObject<Block> wall_sandstone_black = BLOCKS.register("wall_sandstone_black", () -> new SandstoneWall(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.BLACK));
  public static final RegistryObject<Block> wall_sandstone_blue = BLOCKS.register("wall_sandstone_blue", () -> new SandstoneWall(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.BLUE));
  public static final RegistryObject<Block> wall_sandstone_brown = BLOCKS.register("wall_sandstone_brown", () -> new SandstoneWall(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.BROWN));
  public static final RegistryObject<Block> wall_sandstone_cyan = BLOCKS.register("wall_sandstone_cyan", () -> new SandstoneWall(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.CYAN));
  public static final RegistryObject<Block> wall_sandstone_gray = BLOCKS.register("wall_sandstone_gray", () -> new SandstoneWall(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.GRAY));
  public static final RegistryObject<Block> wall_sandstone_green = BLOCKS.register("wall_sandstone_green", () -> new SandstoneWall(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.GREEN));
  public static final RegistryObject<Block> wall_sandstone_light_blue = BLOCKS.register("wall_sandstone_light_blue", () -> new SandstoneWall(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<Block> wall_sandstone_light_gray = BLOCKS.register("wall_sandstone_light_gray", () -> new SandstoneWall(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<Block> wall_sandstone_lime = BLOCKS.register("wall_sandstone_lime", () -> new SandstoneWall(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.LIME));
  public static final RegistryObject<Block> wall_sandstone_magenta = BLOCKS.register("wall_sandstone_magenta", () -> new SandstoneWall(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.MAGENTA));
  public static final RegistryObject<Block> wall_sandstone_orange = BLOCKS.register("wall_sandstone_orange", () -> new SandstoneWall(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.ORANGE));
  public static final RegistryObject<Block> wall_sandstone_pink = BLOCKS.register("wall_sandstone_pink", () -> new SandstoneWall(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.PINK));
  public static final RegistryObject<Block> wall_sandstone_purple = BLOCKS.register("wall_sandstone_purple", () -> new SandstoneWall(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.PURPLE));
  public static final RegistryObject<Block> wall_sandstone_red = BLOCKS.register("wall_sandstone_red", () -> new SandstoneWall(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.RED));
  public static final RegistryObject<Block> wall_sandstone_white = BLOCKS.register("wall_sandstone_white", () -> new SandstoneWall(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.WHITE));
  public static final RegistryObject<Block> wall_sandstone_yellow = BLOCKS.register("wall_sandstone_yellow", () -> new SandstoneWall(Block.Properties.copy(Blocks.SANDSTONE), DyeColorless.YELLOW));
  //
  public static final RegistryObject<Block> wall_cobblestone_none = BLOCKS.register("wall_cobblestone_none", () -> new CobblestoneWall(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.NONE));
  public static final RegistryObject<Block> wall_cobblestone_black = BLOCKS.register("wall_cobblestone_black", () -> new CobblestoneWall(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.BLACK));
  public static final RegistryObject<Block> wall_cobblestone_blue = BLOCKS.register("wall_cobblestone_blue", () -> new CobblestoneWall(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.BLUE));
  public static final RegistryObject<Block> wall_cobblestone_brown = BLOCKS.register("wall_cobblestone_brown", () -> new CobblestoneWall(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.BROWN));
  public static final RegistryObject<Block> wall_cobblestone_cyan = BLOCKS.register("wall_cobblestone_cyan", () -> new CobblestoneWall(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.CYAN));
  public static final RegistryObject<Block> wall_cobblestone_gray = BLOCKS.register("wall_cobblestone_gray", () -> new CobblestoneWall(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.GRAY));
  public static final RegistryObject<Block> wall_cobblestone_green = BLOCKS.register("wall_cobblestone_green", () -> new CobblestoneWall(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.GREEN));
  public static final RegistryObject<Block> wall_cobblestone_light_blue = BLOCKS.register("wall_cobblestone_light_blue", () -> new CobblestoneWall(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<Block> wall_cobblestone_light_gray = BLOCKS.register("wall_cobblestone_light_gray", () -> new CobblestoneWall(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<Block> wall_cobblestone_lime = BLOCKS.register("wall_cobblestone_lime", () -> new CobblestoneWall(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.LIME));
  public static final RegistryObject<Block> wall_cobblestone_magenta = BLOCKS.register("wall_cobblestone_magenta", () -> new CobblestoneWall(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.MAGENTA));
  public static final RegistryObject<Block> wall_cobblestone_orange = BLOCKS.register("wall_cobblestone_orange", () -> new CobblestoneWall(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.ORANGE));
  public static final RegistryObject<Block> wall_cobblestone_pink = BLOCKS.register("wall_cobblestone_pink", () -> new CobblestoneWall(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.PINK));
  public static final RegistryObject<Block> wall_cobblestone_purple = BLOCKS.register("wall_cobblestone_purple", () -> new CobblestoneWall(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.PURPLE));
  public static final RegistryObject<Block> wall_cobblestone_red = BLOCKS.register("wall_cobblestone_red", () -> new CobblestoneWall(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.RED));
  public static final RegistryObject<Block> wall_cobblestone_white = BLOCKS.register("wall_cobblestone_white", () -> new CobblestoneWall(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.WHITE));
  public static final RegistryObject<Block> wall_cobblestone_yellow = BLOCKS.register("wall_cobblestone_yellow", () -> new CobblestoneWall(Block.Properties.copy(Blocks.COBBLESTONE), DyeColorless.YELLOW));
  //
  public static final RegistryObject<Block> wall_planks_none = BLOCKS.register("wall_planks_none", () -> new PlanksWall(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.NONE));
  public static final RegistryObject<Block> wall_planks_black = BLOCKS.register("wall_planks_black", () -> new PlanksWall(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.BLACK));
  public static final RegistryObject<Block> wall_planks_blue = BLOCKS.register("wall_planks_blue", () -> new PlanksWall(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.BLUE));
  public static final RegistryObject<Block> wall_planks_brown = BLOCKS.register("wall_planks_brown", () -> new PlanksWall(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.BROWN));
  public static final RegistryObject<Block> wall_planks_cyan = BLOCKS.register("wall_planks_cyan", () -> new PlanksWall(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.CYAN));
  public static final RegistryObject<Block> wall_planks_gray = BLOCKS.register("wall_planks_gray", () -> new PlanksWall(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.GRAY));
  public static final RegistryObject<Block> wall_planks_green = BLOCKS.register("wall_planks_green", () -> new PlanksWall(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.GREEN));
  public static final RegistryObject<Block> wall_planks_light_blue = BLOCKS.register("wall_planks_light_blue", () -> new PlanksWall(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<Block> wall_planks_light_gray = BLOCKS.register("wall_planks_light_gray", () -> new PlanksWall(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<Block> wall_planks_lime = BLOCKS.register("wall_planks_lime", () -> new PlanksWall(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.LIME));
  public static final RegistryObject<Block> wall_planks_magenta = BLOCKS.register("wall_planks_magenta", () -> new PlanksWall(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.MAGENTA));
  public static final RegistryObject<Block> wall_planks_orange = BLOCKS.register("wall_planks_orange", () -> new PlanksWall(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.ORANGE));
  public static final RegistryObject<Block> wall_planks_pink = BLOCKS.register("wall_planks_pink", () -> new PlanksWall(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.PINK));
  public static final RegistryObject<Block> wall_planks_purple = BLOCKS.register("wall_planks_purple", () -> new PlanksWall(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.PURPLE));
  public static final RegistryObject<Block> wall_planks_red = BLOCKS.register("wall_planks_red", () -> new PlanksWall(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.RED));
  public static final RegistryObject<Block> wall_planks_white = BLOCKS.register("wall_planks_white", () -> new PlanksWall(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.WHITE));
  public static final RegistryObject<Block> wall_planks_yellow = BLOCKS.register("wall_planks_yellow", () -> new PlanksWall(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.YELLOW));
  //
  //
  public static final RegistryObject<Block> wall_brick_none = BLOCKS.register("wall_brick_none", () -> new BrickWall(Block.Properties.copy(Blocks.BRICKS), DyeColorless.NONE));
  public static final RegistryObject<Block> wall_brick_black = BLOCKS.register("wall_brick_black", () -> new BrickWall(Block.Properties.copy(Blocks.BRICKS), DyeColorless.BLACK));
  public static final RegistryObject<Block> wall_brick_blue = BLOCKS.register("wall_brick_blue", () -> new BrickWall(Block.Properties.copy(Blocks.BRICKS), DyeColorless.BLUE));
  public static final RegistryObject<Block> wall_brick_brown = BLOCKS.register("wall_brick_brown", () -> new BrickWall(Block.Properties.copy(Blocks.BRICKS), DyeColorless.BROWN));
  public static final RegistryObject<Block> wall_brick_cyan = BLOCKS.register("wall_brick_cyan", () -> new BrickWall(Block.Properties.copy(Blocks.BRICKS), DyeColorless.CYAN));
  public static final RegistryObject<Block> wall_brick_gray = BLOCKS.register("wall_brick_gray", () -> new BrickWall(Block.Properties.copy(Blocks.BRICKS), DyeColorless.GRAY));
  public static final RegistryObject<Block> wall_brick_green = BLOCKS.register("wall_brick_green", () -> new BrickWall(Block.Properties.copy(Blocks.BRICKS), DyeColorless.GREEN));
  public static final RegistryObject<Block> wall_brick_light_blue = BLOCKS.register("wall_brick_light_blue", () -> new BrickWall(Block.Properties.copy(Blocks.BRICKS), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<Block> wall_brick_light_gray = BLOCKS.register("wall_brick_light_gray", () -> new BrickWall(Block.Properties.copy(Blocks.BRICKS), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<Block> wall_brick_lime = BLOCKS.register("wall_brick_lime", () -> new BrickWall(Block.Properties.copy(Blocks.BRICKS), DyeColorless.LIME));
  public static final RegistryObject<Block> wall_brick_magenta = BLOCKS.register("wall_brick_magenta", () -> new BrickWall(Block.Properties.copy(Blocks.BRICKS), DyeColorless.MAGENTA));
  public static final RegistryObject<Block> wall_brick_orange = BLOCKS.register("wall_brick_orange", () -> new BrickWall(Block.Properties.copy(Blocks.BRICKS), DyeColorless.ORANGE));
  public static final RegistryObject<Block> wall_brick_pink = BLOCKS.register("wall_brick_pink", () -> new BrickWall(Block.Properties.copy(Blocks.BRICKS), DyeColorless.PINK));
  public static final RegistryObject<Block> wall_brick_purple = BLOCKS.register("wall_brick_purple", () -> new BrickWall(Block.Properties.copy(Blocks.BRICKS), DyeColorless.PURPLE));
  public static final RegistryObject<Block> wall_brick_red = BLOCKS.register("wall_brick_red", () -> new BrickWall(Block.Properties.copy(Blocks.BRICKS), DyeColorless.RED));
  public static final RegistryObject<Block> wall_brick_white = BLOCKS.register("wall_brick_white", () -> new BrickWall(Block.Properties.copy(Blocks.BRICKS), DyeColorless.WHITE));
  public static final RegistryObject<Block> wall_brick_yellow = BLOCKS.register("wall_brick_yellow", () -> new BrickWall(Block.Properties.copy(Blocks.BRICKS), DyeColorless.YELLOW));
  //
  public static final RegistryObject<Block> fence_planks_none = BLOCKS.register("fence_planks_none", () -> new PlanksFence(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.NONE));
  public static final RegistryObject<Block> fence_planks_black = BLOCKS.register("fence_planks_black", () -> new PlanksFence(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.BLACK));
  public static final RegistryObject<Block> fence_planks_blue = BLOCKS.register("fence_planks_blue", () -> new PlanksFence(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.BLUE));
  public static final RegistryObject<Block> fence_planks_brown = BLOCKS.register("fence_planks_brown", () -> new PlanksFence(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.BROWN));
  public static final RegistryObject<Block> fence_planks_cyan = BLOCKS.register("fence_planks_cyan", () -> new PlanksFence(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.CYAN));
  public static final RegistryObject<Block> fence_planks_gray = BLOCKS.register("fence_planks_gray", () -> new PlanksFence(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.GRAY));
  public static final RegistryObject<Block> fence_planks_green = BLOCKS.register("fence_planks_green", () -> new PlanksFence(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.GREEN));
  public static final RegistryObject<Block> fence_planks_light_blue = BLOCKS.register("fence_planks_light_blue", () -> new PlanksFence(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<Block> fence_planks_light_gray = BLOCKS.register("fence_planks_light_gray", () -> new PlanksFence(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<Block> fence_planks_lime = BLOCKS.register("fence_planks_lime", () -> new PlanksFence(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.LIME));
  public static final RegistryObject<Block> fence_planks_magenta = BLOCKS.register("fence_planks_magenta", () -> new PlanksFence(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.MAGENTA));
  public static final RegistryObject<Block> fence_planks_orange = BLOCKS.register("fence_planks_orange", () -> new PlanksFence(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.ORANGE));
  public static final RegistryObject<Block> fence_planks_pink = BLOCKS.register("fence_planks_pink", () -> new PlanksFence(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.PINK));
  public static final RegistryObject<Block> fence_planks_purple = BLOCKS.register("fence_planks_purple", () -> new PlanksFence(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.PURPLE));
  public static final RegistryObject<Block> fence_planks_red = BLOCKS.register("fence_planks_red", () -> new PlanksFence(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.RED));
  public static final RegistryObject<Block> fence_planks_white = BLOCKS.register("fence_planks_white", () -> new PlanksFence(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.WHITE));
  public static final RegistryObject<Block> fence_planks_yellow = BLOCKS.register("fence_planks_yellow", () -> new PlanksFence(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.YELLOW));
  //
  public static final RegistryObject<Block> gate_planks_none = BLOCKS.register("gate_planks_none", () -> new PlanksGate(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.NONE));
  public static final RegistryObject<Block> gate_planks_black = BLOCKS.register("gate_planks_black", () -> new PlanksGate(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.BLACK));
  public static final RegistryObject<Block> gate_planks_blue = BLOCKS.register("gate_planks_blue", () -> new PlanksGate(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.BLUE));
  public static final RegistryObject<Block> gate_planks_brown = BLOCKS.register("gate_planks_brown", () -> new PlanksGate(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.BROWN));
  public static final RegistryObject<Block> gate_planks_cyan = BLOCKS.register("gate_planks_cyan", () -> new PlanksGate(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.CYAN));
  public static final RegistryObject<Block> gate_planks_gray = BLOCKS.register("gate_planks_gray", () -> new PlanksGate(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.GRAY));
  public static final RegistryObject<Block> gate_planks_green = BLOCKS.register("gate_planks_green", () -> new PlanksGate(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.GREEN));
  public static final RegistryObject<Block> gate_planks_light_blue = BLOCKS.register("gate_planks_light_blue", () -> new PlanksGate(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.LIGHT_BLUE));
  public static final RegistryObject<Block> gate_planks_light_gray = BLOCKS.register("gate_planks_light_gray", () -> new PlanksGate(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.LIGHT_GRAY));
  public static final RegistryObject<Block> gate_planks_lime = BLOCKS.register("gate_planks_lime", () -> new PlanksGate(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.LIME));
  public static final RegistryObject<Block> gate_planks_magenta = BLOCKS.register("gate_planks_magenta", () -> new PlanksGate(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.MAGENTA));
  public static final RegistryObject<Block> gate_planks_orange = BLOCKS.register("gate_planks_orange", () -> new PlanksGate(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.ORANGE));
  public static final RegistryObject<Block> gate_planks_pink = BLOCKS.register("gate_planks_pink", () -> new PlanksGate(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.PINK));
  public static final RegistryObject<Block> gate_planks_purple = BLOCKS.register("gate_planks_purple", () -> new PlanksGate(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.PURPLE));
  public static final RegistryObject<Block> gate_planks_red = BLOCKS.register("gate_planks_red", () -> new PlanksGate(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.RED));
  public static final RegistryObject<Block> gate_planks_white = BLOCKS.register("gate_planks_white", () -> new PlanksGate(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.WHITE));
  public static final RegistryObject<Block> gate_planks_yellow = BLOCKS.register("gate_planks_yellow", () -> new PlanksGate(Block.Properties.copy(Blocks.OAK_PLANKS), DyeColorless.YELLOW));
  //
}
